digraph G{
fontname = "Bitstream Vera Sans"
fontname = "Bitstream Vera Sans"
fontsize = 8
node [
fontname = "Bitstream Vera Sans"
fontsize = 8
shape = "record"
]
edge [
fontname = "Bitstream Vera Sans"
fontsize = 8
]
TextListenerTestXXX[label="{TextListenerTestXXX||+  init() : void\l+  one() : void\l}"]
TimeoutRuleTestXXX[label="{TimeoutRuleTestXXX|+  globalTimeout : TimeoutRuleTest$HasNullTimeUnit\l|+  init() : void\l+  wouldPass() : void\l}"]
VerifierRuleTestXXX[label="{VerifierRuleTestXXX|+  collector : VerifierRuleTest$UsesErrorCollectorCheckSucceedsPasses\l|+  init() : void\l+  example() : void\l}"]
JUnit4ClassRunnerXXX[label="{JUnit4ClassRunnerXXX|+  val$sorter : JUnit4ClassRunner$2\l+  this$0 : JUnit4ClassRunner$2\l|+  init() : void\l+  compare() : I\l}"]
ClassRoadie[label="{ClassRoadie|+  notifier : ClassRoadie\l+  testClass : ClassRoadie\l+  description : ClassRoadie\l+  runnable : ClassRoadie\l|+  init() : void\l+  runUnprotected() : void\l+  addFailure() : void\l+  runProtected() : void\l+  runBefores() : void\l+  runAfters() : void\l}"]
SuiteTestXXX[label="{SuiteTestXXX|+  this$0 : SuiteTest$NoSuiteClassesAnnotation\l|+  init() : void\l}"]
EachTestNotifier[label="{EachTestNotifier|+  notifier : EachTestNotifier\l+  description : EachTestNotifier\l|+  init() : void\l+  addFailure() : void\l+  addMultipleFailureException() : void\l+  addFailedAssumption() : void\l+  fireTestFinished() : void\l+  fireTestStarted() : void\l+  fireTestIgnored() : void\l+  fireTestSuiteStarted() : void\l+  fireTestSuiteFinished() : void\l}"]
InheritedTestTest[label="{InheritedTestTest||+  init() : void\l+  subclassWithOnlyInheritedTestsRuns() : void\l+  subclassWithInheritedTestAndOwnBeforeRunsBefore() : void\l}"]
BlockJUnit4ClassRunnerWithParametersTest[label="{BlockJUnit4ClassRunnerWithParametersTest|+  thrown : BlockJUnit4ClassRunnerWithParametersTest\l+  NO_PARAMETERS : BlockJUnit4ClassRunnerWithParametersTest\l|+  init() : void\l+  hasAllAnnotationsExceptRunWith() : void\l+  providesHelpfulMessageIfParameterFieldCannotBeSet() : void\l+  clinit() : void\l}"]
SpecificDataPointsSupplierTest[label="{SpecificDataPointsSupplierTest||+  init() : void\l+  shouldReturnOnlyTheNamedDataPoints() : void\l+  shouldReturnOnlyTheNamedFieldDataPoints() : void\l+  shouldReturnOnlyTheNamedMethodDataPoints() : void\l+  shouldReturnOnlyTheNamedSingleFieldDataPoints() : void\l+  shouldReturnOnlyTheNamedSingleMethodDataPoints() : void\l+  shouldReturnNothingIfTheNamedDataPointsAreMissing() : void\l+  getStringValuesFromAssignments() : List\l+  signature() : ParameterSignature\l+  methodWantingAnyString() : void\l+  methodWantingNamedFieldString() : void\l+  methodWantingNamedMethodString() : void\l+  methodWantingNamedSingleFieldString() : void\l+  methodWantingNamedSingleMethodString() : void\l+  methodWantingAllNamedStrings() : void\l+  methodWantingWrongNamedString() : void\l}"]
MultiCategoryTestXXX[label="{MultiCategoryTestXXX||+  init() : void\l+  x() : void\l+  y() : void\l+  z() : void\l+  w() : void\l+  q() : void\l+  runnable() : void\l+  t() : void\l}"]
JavadocTestXXX[label="{JavadocTestXXX||+  init() : void\l+  d() : void\l}"]
Assignments[label="{Assignments|+  assigned : Assignments\l+  unassigned : Assignments\l+  clazz : Assignments\l|+  init() : void\l+  allUnassigned() : Assignments\l+  isComplete() : Z\l+  nextUnassigned() : ParameterSignature\l+  assignNext() : Assignments\l+  getActualValues() : Object\l+  potentialsForNextUnassigned() : List\l+  generateAssignmentsFromTypeAlone() : List\l+  getSupplier() : ParameterSupplier\l+  buildParameterSupplierFromClass() : ParameterSupplier\l+  getConstructorArguments() : Object\l+  getMethodArguments() : Object\l+  getAllArguments() : Object\l+  getConstructorParameterCount() : I\l+  getArgumentStrings() : Object\l}"]
CategoryTestXXX[label="{CategoryTestXXX||}"]
TestFailure[label="{TestFailure|+  fFailedTest : TestFailure\l+  fThrownException : TestFailure\l|+  init() : void\l+  failedTest() : Test\l+  thrownException() : Throwable\l+  toString() : String\l+  trace() : String\l+  exceptionMessage() : String\l+  isFailure() : Z\l}"]
AllModelTests[label="{AllModelTests||+  init() : void\l}"]
ExpectedExceptionTestXXX[label="{ExpectedExceptionTestXXX|+  thrown : ExpectedExceptionTest$FailBeforeExpectingException\l|+  init() : void\l+  fails() : void\l}"]
TestWithParameters[label="{TestWithParameters|+  name : TestWithParameters\l+  testClass : TestWithParameters\l+  parameters : TestWithParameters\l|+  init() : void\l+  getName() : String\l+  getTestClass() : TestClass\l+  getParameters() : List\l+  hashCode() : I\l+  equals() : Z\l+  toString() : String\l}"]
RuleChainTest[label="{RuleChainTest|+  LOG : RuleChainTest\l|+  init() : void\l+  executeRulesInCorrectOrder() : void\l+  aroundShouldNotAllowNullRules() : void\l+  whenRuleChainHasNullRuleTheStacktraceShouldPointToIt() : void\l+  access000() : List\l+  clinit() : void\l}"]
WithOnlyTestAnnotations[label="{WithOnlyTestAnnotations||+  init() : void\l+  honorExpected() : void\l+  honorExpectedPassing() : void\l+  honorTimeout() : void\l+  testErrorWhenTestHasParametersDespiteTheories() : void\l}"]
JUnitCommandLineParseResultXXX[label="{JUnitCommandLineParseResultXXX|+  backtrace : Throwable\l+  detailMessage : Throwable\l+  cause : Throwable\l+  stackTrace : Throwable\l+  suppressedExceptions : Throwable\l+  serialVersionUID : Throwable\l+  UNASSIGNED_STACK : Throwable\l+  SUPPRESSED_SENTINEL : Throwable\l+  NULL_CAUSE_MESSAGE : Throwable\l+  SELF_SUPPRESSION_MESSAGE : Throwable\l+  CAUSE_CAPTION : Throwable\l+  SUPPRESSED_CAPTION : Throwable\l+  EMPTY_THROWABLE_ARRAY : Throwable\l+  $assertionsDisabled : Throwable\l|+  init() : void\l}"]
FailOnTimeoutXXX[label="{FailOnTimeoutXXX||}"]
InheritedTestTestXXX[label="{InheritedTestTestXXX||+  init() : void\l}"]
RequestTest[label="{RequestTest||+  init() : void\l+  createsADescriptionWithANameForClasses() : void\l}"]
BlockJUnit4ClassRunnerTest[label="{BlockJUnit4ClassRunnerTest|+  this$0 : BlockJUnit4ClassRunnerTest$OuterClass$Enclosed\l|+  init() : void\l+  test() : void\l}"]
AnnotationsValidatorXXX[label="{AnnotationsValidatorXXX|+  ANNOTATION_VALIDATOR_FACTORY : AnnotationsValidator$AnnotatableValidator\l|+  init() : void\l+  getAnnotatablesForTestClass() : Iterable\l+  validateAnnotatable() : List\l}"]
MultipleFailureException[label="{MultipleFailureException|+  fErrors : MultipleFailureException\l+  backtrace : Throwable\l+  detailMessage : Throwable\l+  cause : Throwable\l+  stackTrace : Throwable\l+  suppressedExceptions : Throwable\l+  serialVersionUID : Throwable\l+  UNASSIGNED_STACK : Throwable\l+  SUPPRESSED_SENTINEL : Throwable\l+  NULL_CAUSE_MESSAGE : Throwable\l+  SELF_SUPPRESSION_MESSAGE : Throwable\l+  CAUSE_CAPTION : Throwable\l+  SUPPRESSED_CAPTION : Throwable\l+  EMPTY_THROWABLE_ARRAY : Throwable\l+  $assertionsDisabled : Throwable\l|+  init() : void\l}"]
MethodSorterTestXXX[label="{MethodSorterTestXXX||+  init() : void\l+  alpha() : Object\l+  beta() : void\l+  gamma() : void\l+  delta() : void\l+  epsilon() : void\l}"]
SuccessfulWithDataPointFieldsXXX[label="{SuccessfulWithDataPointFieldsXXX|+  befores : SuccessfulWithDataPointFields$BeforeAndAfterEachTime\l+  A : SuccessfulWithDataPointFields$BeforeAndAfterEachTime\l+  B : SuccessfulWithDataPointFields$BeforeAndAfterEachTime\l|+  init() : void\l+  incrementBefore() : void\l+  resetCalls() : void\l+  stringsAreOK() : void\l+  calledTwice() : void\l+  clinit() : void\l}"]
AllRunnersTests[label="{AllRunnersTests||+  init() : void\l}"]
AllManipulationTests[label="{AllManipulationTests||+  init() : void\l}"]
MainRunnerXXX[label="{MainRunnerXXX|+  originalSecurityManager : MainRunner$NoExitSecurityManager\l+  this$0 : MainRunner$NoExitSecurityManager\l+  inCheck : SecurityManager\l+  initialized : SecurityManager\l+  rootGroup : SecurityManager\l+  packageAccessValid : SecurityManager\l+  packageAccess : SecurityManager\l+  packageAccessLock : SecurityManager\l+  packageDefinitionValid : SecurityManager\l+  packageDefinition : SecurityManager\l+  packageDefinitionLock : SecurityManager\l|+  init() : void\l+  checkExit() : void\l+  getInCheck() : Z\l+  getSecurityContext() : Object\l+  checkPermission() : void\l+  checkCreateClassLoader() : void\l+  checkAccess() : void\l+  checkExec() : void\l+  checkLink() : void\l+  checkRead() : void\l+  checkWrite() : void\l+  checkDelete() : void\l+  checkConnect() : void\l+  checkListen() : void\l+  checkAccept() : void\l+  checkMulticast() : void\l+  checkPropertiesAccess() : void\l+  checkPropertyAccess() : void\l+  checkTopLevelWindow() : Z\l+  checkPrintJobAccess() : void\l+  checkSystemClipboardAccess() : void\l+  checkAwtEventQueueAccess() : void\l+  checkPackageAccess() : void\l+  checkPackageDefinition() : void\l+  checkSetFactory() : void\l+  checkMemberAccess() : void\l+  checkSecurityAccess() : void\l+  getThreadGroup() : ThreadGroup\l}"]
ArrayComparisonFailure[label="{ArrayComparisonFailure|+  fIndices : ArrayComparisonFailure\l+  fMessage : ArrayComparisonFailure\l+  fCause : ArrayComparisonFailure\l+  backtrace : Throwable\l+  detailMessage : Throwable\l+  cause : Throwable\l+  stackTrace : Throwable\l+  suppressedExceptions : Throwable\l+  serialVersionUID : Throwable\l+  UNASSIGNED_STACK : Throwable\l+  SUPPRESSED_SENTINEL : Throwable\l+  NULL_CAUSE_MESSAGE : Throwable\l+  SELF_SUPPRESSION_MESSAGE : Throwable\l+  CAUSE_CAPTION : Throwable\l+  SUPPRESSED_CAPTION : Throwable\l+  EMPTY_THROWABLE_ARRAY : Throwable\l+  $assertionsDisabled : Throwable\l|+  init() : void\l+  addDimension() : void\l+  getCause() : Throwable\l+  getMessage() : String\l+  toString() : String\l}"]
BadlyFormedClassesTestXXX[label="{BadlyFormedClassesTestXXX||+  init() : void\l+  before() : void\l+  someTest() : void\l}"]
FailingDataPointMethodsXXX[label="{FailingDataPointMethodsXXX|+  num : FailingDataPointMethods$HasFailingDataPointArrayMethod\l|+  init() : void\l+  failingDataPoints() : [I\l+  theory() : void\l+  clinit() : void\l}"]
ArrayComparisonFailureTest[label="{ArrayComparisonFailureTest|+  ARRAY_COMPARISON_FAILURE_411 : ArrayComparisonFailureTest\l+  ARRAY_COMPARISON_FAILURE_412 : ArrayComparisonFailureTest\l|+  init() : void\l+  classShouldAccept411Version() : void\l+  classShouldAccept412Version() : void\l+  assertFailureSerializableFromOthers() : void\l+  deserializeFailureFromFile() : ArrayComparisonFailure\l}"]
TheoryTestUtils[label="{TheoryTestUtils||+  init() : void\l+  potentialAssignments() : List\l+  runTheoryClass() : Result\l}"]
ManagementFactory[label="{ManagementFactory||+  init() : void\l+  getRuntimeMXBean() : RuntimeMXBean\l+  getThreadMXBean() : ThreadMXBean\l}"]
ParameterSignatureTest[label="{ParameterSignatureTest|+  ZERO : ParameterSignatureTest\l+  ONE : ParameterSignatureTest\l|+  init() : void\l+  getType() : void\l+  foo() : void\l+  getAnnotations() : void\l+  intMethod() : void\l+  integerMethod() : void\l+  numberMethod() : void\l+  primitiveTypesShouldBeAcceptedAsWrapperTypes() : void\l+  primitiveTypesShouldBeAcceptedAsWrapperTypeAssignables() : void\l+  wrapperTypesShouldBeAcceptedAsPrimitiveTypes() : void\l+  clinit() : void\l}"]
TestMethodTestXXX[label="{TestMethodTestXXX||+  init() : void\l+  valid() : void\l+  ignored() : void\l+  withReason() : void\l}"]
TempFolderRuleTestXXX[label="{TempFolderRuleTestXXX|+  folder : TempFolderRuleTest$CreatesRandomSubFolders\l|+  init() : void\l+  testUsingRandomTempFolders() : void\l}"]
CategoriesAndParameterizedTestXXX[label="{CategoriesAndParameterizedTestXXX|+  value : CategoriesAndParameterizedTest$ParameterizedTestWithMethodWithCategory\l|+  init() : void\l+  getParameters() : Iterable\l+  testSomething() : void\l+  testThatIsNotExecuted() : void\l}"]
PrintableResultTestXXX[label="{PrintableResultTestXXX|+  val$stackTraceClassName : PrintableResultTest$1\l+  this$0 : PrintableResultTest$1\l+  backtrace : Throwable\l+  detailMessage : Throwable\l+  cause : Throwable\l+  stackTrace : Throwable\l+  suppressedExceptions : Throwable\l+  serialVersionUID : Throwable\l+  UNASSIGNED_STACK : Throwable\l+  SUPPRESSED_SENTINEL : Throwable\l+  NULL_CAUSE_MESSAGE : Throwable\l+  SELF_SUPPRESSION_MESSAGE : Throwable\l+  CAUSE_CAPTION : Throwable\l+  SUPPRESSED_CAPTION : Throwable\l+  EMPTY_THROWABLE_ARRAY : Throwable\l+  $assertionsDisabled : Throwable\l|+  init() : void\l+  getStackTrace() : StackTraceElement\l}"]
AllNotificationTests[label="{AllNotificationTests||+  init() : void\l}"]
ParameterizedTestTest[label="{ParameterizedTestTest|+  fLog : ParameterizedTestTest\l|+  init() : void\l+  countsRuns() : void\l+  countBeforeRun() : void\l+  plansNamedCorrectly() : void\l+  countsFailures() : void\l+  failuresNamedCorrectly() : void\l+  usesIndexAsTestName() : void\l+  providesDataByAnnotatedFields() : void\l+  failureOnInitialization() : void\l+  numberOfFieldsAndParametersShouldMatch() : void\l+  beforeAndAfterClassAreRun() : void\l+  beforeParamAndAfterParamAreRun() : void\l+  multipleBeforeParamAndAfterParamAreRun() : void\l+  multipleParametersBeforeParamAndAfterParamAreRun() : void\l+  beforeParamAndAfterParamValidation() : void\l+  beforeParamAndAfterParamValidationNumberOfParameters() : void\l+  validateClassCatchesNoParameters() : void\l+  failuresAddedForBadTestMethod() : void\l+  meaningfulFailureWhenParametersNotPublic() : void\l+  meaningfulFailureWhenParametersAreNotAnIterable() : void\l+  exceptionWhenPrivateConstructor() : void\l+  runsEveryTestOfArray() : void\l+  runsForEverySingleArgumentOfArray() : void\l+  runsForEverySingleArgumentOfIterable() : void\l+  runsForEverySingleArgumentOfCollection() : void\l+  usesParametersRunnerFactoryThatWasSpecifiedByAnnotation() : void\l+  assertTestCreatesSingleFailureWithMessage() : void\l+  usesParametersRunnerFactoryThatWasSpecifiedByAnnotationInSuperClass() : void\l+  assumtionViolationInParameters() : void\l+  access000() : String\l+  access002() : String\l}"]
AllMembersSupplierTestXXX[label="{AllMembersSupplierTestXXX|+  list : AllMembersSupplierTest$HasDataPointsListFieldWithOverlyGenericTypes\l|+  init() : void\l+  theory() : void\l+  clinit() : void\l}"]
TestMethod[label="{TestMethod|+  method : TestMethod\l+  testClass : TestMethod\l|+  init() : void\l+  isIgnored() : Z\l+  getTimeout() : J\l+  getExpectedException() : Class\l+  isUnexpected() : Z\l+  expectsException() : Z\l+  getBefores() : List\l+  getAfters() : List\l+  invoke() : void\l}"]
CustomBlockJUnit4ClassRunnerTest[label="{CustomBlockJUnit4ClassRunnerTest||+  init() : void\l+  exceptionsFromMethodBlockMustNotResultInUnrootedTests() : void\l}"]
ExpectedTest[label="{ExpectedTest||+  init() : void\l+  expected() : void\l+  unexpected() : void\l+  noneThrown() : void\l+  expectsSuperclass() : void\l+  expectsAssumptionViolatedException() : void\l}"]
NameRulesTestXXX[label="{NameRulesTestXXX|+  name : NameRulesTest$TestNames\l|+  init() : void\l+  testA() : void\l+  testB() : void\l}"]
MethodSorterXXX[label="{MethodSorterXXX||+  init() : void\l+  compare() : I\l}"]
AnnotatedBuilderTest[label="{AnnotatedBuilderTest|+  this$0 : AnnotatedBuilderTest$OuterClass$InnerClassWithOwnRunWith\l|+  init() : void\l+  test() : void\l}"]
ReflectiveRuntimeMXBeanXXX[label="{ReflectiveRuntimeMXBeanXXX|+  getInputArgumentsMethod : ReflectiveRuntimeMXBean$Holder\l|+  init() : void\l+  access000() : Method\l+  clinit() : void\l}"]
DataPoint[label="{DataPoint||+  value() : String\l+  ignoredExceptions() : Class\l}"]
InitializationErrorForwardCompatibilityTest[label="{InitializationErrorForwardCompatibilityTest|+  fAdapter : InitializationErrorForwardCompatibilityTest\l|+  init() : void\l+  createAdapter() : void\l+  initializationErrorsShowUpAsWarnings() : void\l+  initializationErrorsAreThrownAtRuntime() : void\l+  generatedErrorTestsMatchUp() : void\l}"]
Category[label="{Category||+  value() : Class\l}"]
TimeoutTest[label="{TimeoutTest||+  init() : void\l+  failureWithTimeout() : void\l+  failureWithTimeoutRunTimeException() : void\l+  successWithTimeout() : void\l+  timeoutFailure() : void\l+  infiniteLoop() : void\l+  infiniteLoopRunsForApproximatelyLengthOfTimeout() : void\l+  runAndTime() : J\l+  stackForException() : String\l+  stalledThreadAppearsInStackTrace() : void\l+  timeoutFailureMultithreaded() : void\l+  timeoutFailureMultithreadedStuckInMain() : void\l+  compatibility() : void\l+  makeSureAfterIsCalledAfterATimeout() : void\l+  testZeroTimeoutIsIgnored() : void\l+  testGetTimeout() : void\l}"]
WithExtendedParameterSourcesXXX[label="{WithExtendedParameterSourcesXXX|+  log : WithExtendedParameterSources$DataPointArrayMethod\l|+  init() : void\l+  STRINGS() : String\l+  addToLog() : void\l+  clinit() : void\l}"]
DescriptionTestXXX[label="{DescriptionTestXXX||+  init() : void\l+  tessed() : void\l}"]
WithUnresolvedGenericTypeVariablesOnTheoryParmsXXX[label="{WithUnresolvedGenericTypeVariablesOnTheoryParmsXXX|+  item : WithUnresolvedGenericTypeVariablesOnTheoryParms$TypeVariableOnTheoryClass\l|+  init() : void\l+  forItem() : void\l+  clinit() : void\l}"]
SuiteDescriptionTest[label="{SuiteDescriptionTest|+  childless : SuiteDescriptionTest\l+  anotherChildless : SuiteDescriptionTest\l+  namedB : SuiteDescriptionTest\l+  twoKids : SuiteDescriptionTest\l+  anotherTwoKids : SuiteDescriptionTest\l|+  init() : void\l+  equalsIsCorrect() : void\l+  hashCodeIsReasonable() : void\l+  descriptionWithTwoKids() : Description\l}"]
ErrorCollectorXXX[label="{ErrorCollectorXXX|+  val$reason : ErrorCollector$1\l+  val$value : ErrorCollector$1\l+  val$matcher : ErrorCollector$1\l+  this$0 : ErrorCollector$1\l|+  init() : void\l+  call() : Object\l}"]
AllParameterizedTests[label="{AllParameterizedTests||+  init() : void\l}"]
WithAutoGeneratedDataPointsXXX[label="{WithAutoGeneratedDataPointsXXX|+  value : WithAutoGeneratedDataPoints$TheoryTestClassWithSpecificEnumDataPoint\l|+  init() : void\l+  theory() : void\l+  clinit() : void\l}"]
RunNotifierXXX[label="{RunNotifierXXX|+  val$failures : RunNotifier$6\l+  this$0 : RunNotifier$SafeNotifier\l+  currentListeners : RunNotifier$SafeNotifier\l|+  init() : void\l+  notifyListener() : void\l}"]
SampleJUnit4TestsXXX[label="{SampleJUnit4TestsXXX||+  init() : void\l+  alwaysThrows() : void\l}"]
EnclosedTest[label="{EnclosedTest||+  init() : void\l+  a() : void\l}"]
UnsuccessfulWithDataPointFields[label="{UnsuccessfulWithDataPointFields||+  init() : void\l+  theoryClassMethodsShowUp() : void\l+  theoryAnnotationsAreRetained() : void\l+  canRunTheories() : void\l+  reportBadParams() : void\l+  nullsUsedUnlessProhibited() : void\l+  theoriesMustBePublic() : void\l+  dataPointFieldsMustBeStatic() : void\l+  dataPointMethodsMustBeStatic() : void\l+  dataPointFieldsMustBePublic() : void\l+  dataPointMethodsMustBePublic() : void\l}"]
MaxHistory[label="{MaxHistory|+  fDurations : MaxHistory\l+  fFailureTimestamps : MaxHistory\l+  fHistoryStore : MaxHistory\l+  serialVersionUID : MaxHistory\l|+  forFolder() : MaxHistory\l+  readHistory() : MaxHistory\l+  init() : void\l+  save() : void\l+  getFailureTimestamp() : Long\l+  putTestFailureTimestamp() : void\l+  isNewTest() : Z\l+  getTestDuration() : Long\l+  putTestDuration() : void\l+  listener() : RunListener\l+  testComparator() : Comparator\l+  access000() : void\l}"]
PrintableResultTest[label="{PrintableResultTest|+  SHELL_POINT : PrintableResultTest\l|+  init() : void\l+  backTraceHasGoodToString() : void\l+  includeMultipleFailures() : void\l+  clinit() : void\l}"]
WithParameterSupplier[label="{WithParameterSupplier|+  expected : WithParameterSupplier\l+  DATAPOINTS : WithParameterSupplier\l|+  init() : void\l+  shouldPickUpDataPointsFromParameterSupplier() : void\l+  shouldRejectSuppliersWithUnknownConstructors() : void\l+  shouldRejectSuppliersWithTwoConstructors() : void\l+  shouldAcceptSuppliersWithTestClassConstructor() : void\l+  access000() : List\l+  clinit() : void\l}"]
JUnitCoreReturnsCorrectExitCodeTest[label="{JUnitCoreReturnsCorrectExitCodeTest||+  init() : void\l+  failureCausesExitCodeOf1() : void\l+  missingClassCausesExitCodeOf1() : void\l+  successCausesExitCodeOf0() : void\l+  runClass() : void\l}"]
ParallelMethodTest[label="{ParallelMethodTest|+  TIMEOUT : ParallelMethodTest\l+  fOne : ParallelMethodTest\l+  fTwo : ParallelMethodTest\l|+  init() : void\l+  init() : void\l+  testsRunInParallel() : void\l+  access002() : Thread\l+  access102() : Thread\l+  clinit() : void\l}"]
StopwatchTestXXX[label="{StopwatchTestXXX|+  fakeClock : StopwatchTest$AbstractStopwatchTest\l+  stopwatch : StopwatchTest$AbstractStopwatchTest\l+  watcher : StopwatchTest$AbstractStopwatchTest\l+  chain : StopwatchTest$AbstractStopwatchTest\l|+  init() : void\l+  duration() : void\l+  afterStopwatchRule() : void\l}"]
TestedOnSupplierTest[label="{TestedOnSupplierTest||+  init() : void\l+  foo() : void\l+  descriptionStatesParameterName() : void\l+  signatureOfFoo() : ParameterSignature\l}"]
TestDescriptionMethodNameTest[label="{TestDescriptionMethodNameTest|+  methodName : TestDescriptionMethodNameTest\l|+  init() : void\l+  getMethodNames() : Collection\l+  methodNameTest() : void\l}"]
FromDataPoints[label="{FromDataPoints||+  value() : String\l}"]
ParameterizedAssertionError[label="{ParameterizedAssertionError|+  backtrace : Throwable\l+  detailMessage : Throwable\l+  cause : Throwable\l+  stackTrace : Throwable\l+  suppressedExceptions : Throwable\l+  serialVersionUID : Throwable\l+  UNASSIGNED_STACK : Throwable\l+  SUPPRESSED_SENTINEL : Throwable\l+  NULL_CAUSE_MESSAGE : Throwable\l+  SELF_SUPPRESSION_MESSAGE : Throwable\l+  CAUSE_CAPTION : Throwable\l+  SUPPRESSED_CAPTION : Throwable\l+  EMPTY_THROWABLE_ARRAY : Throwable\l+  $assertionsDisabled : Throwable\l|+  init() : void\l+  equals() : Z\l+  hashCode() : I\l+  join() : String\l+  stringValueOf() : String\l}"]
PrintableResult[label="{PrintableResult|+  result : PrintableResult\l|+  testResult() : PrintableResult\l+  init() : void\l+  failureCount() : I\l+  failures() : List\l+  toString() : String\l}"]
JUnitCommandLineParseResultTest[label="{JUnitCommandLineParseResultTest|+  expectedException : JUnitCommandLineParseResultTest\l+  jUnitCommandLineParseResult : JUnitCommandLineParseResultTest\l|+  init() : void\l+  shouldStopParsingOptionsUponDoubleHyphenArg() : void\l+  shouldParseFilterArgWithEqualsSyntax() : void\l+  shouldCreateFailureUponBaldFilterOptionNotFollowedByValue() : void\l+  shouldParseFilterArgInWhichValueIsASeparateArg() : void\l+  shouldStopParsingOptionsUponNonOption() : void\l+  shouldCreateFailureUponUnknownOption() : void\l+  shouldCreateFailureUponUncreatedFilter() : void\l+  shouldCreateFailureUponUnfoundFilterFactory() : void\l+  shouldAddToClasses() : void\l+  shouldCreateFailureUponUnknownTestClass() : void\l}"]
WithOnlyTestAnnotationsXXX[label="{WithOnlyTestAnnotationsXXX||+  init() : void\l+  shouldThrow() : void\l}"]
TestClassTestXXX[label="{TestClassTestXXX||+  init() : void\l+  methodC() : I\l+  methodA() : String\l+  methodB() : I\l}"]
WithExtendedParameterSources[label="{WithExtendedParameterSources||+  init() : void\l+  testedOnLimitsParameters() : void\l+  shouldFilterOutNullSingleDataPoints() : void\l+  shouldFilterOutNullElementsFromDataPointArrays() : void\l+  ShouldRejectTheoriesWithOnlyDisallowedNullData() : void\l+  getDataPointsFromArray() : void\l+  getDataPointsFromArrayMethod() : void\l+  getDataPointsFromArrayMethodInSpiteOfMalformedness() : void\l+  dataPointCanBeArray() : void\l}"]
TestDescriptionTest[label="{TestDescriptionTest||+  init() : void\l+  equalsIsFalseForNonTestDescription() : void\l+  equalsIsTrueForSameNameAndNoExplicitUniqueId() : void\l+  equalsIsFalseForSameNameAndDifferentUniqueId() : void\l}"]
ParameterizedTestMethodTestXXX[label="{ParameterizedTestMethodTestXXX||+  init() : void\l+  justFine() : void\l}"]
ListenerTest[label="{ListenerTest|+  log : ListenerTest\l|+  init() : void\l+  notifyListenersInTheOrderInWhichTheyAreAdded() : void\l+  access000() : String\l+  access002() : String\l}"]
CategoryValidatorTest[label="{CategoryValidatorTest||+  init() : void\l+  errorIsAddedWhenCategoryIsUsedWithBeforeClass() : void\l+  errorIsAddedWhenCategoryIsUsedWithAfterClass() : void\l+  errorIsAddedWhenCategoryIsUsedWithBefore() : void\l+  errorIsAddedWhenCategoryIsUsedWithAfter() : void\l+  testAndAssertErrorMessage() : void\l+  errorIsNotAddedWhenCategoryIsNotCombinedWithIllegalCombination() : void\l}"]
RunListenerXXX[label="{RunListenerXXX||}"]
CommandLineTestXXX[label="{CommandLineTestXXX||+  init() : void\l+  increment() : void\l}"]
JUnitMatchers[label="{JUnitMatchers||+  init() : void\l+  hasItem() : Matcher\l+  hasItems() : Matcher\l+  everyItem() : Matcher\l+  containsString() : Matcher\l+  both() : CombinableMatcher$CombinableBothMatcher\l+  either() : CombinableMatcher$CombinableEitherMatcher\l+  isThrowable() : Matcher\l+  isException() : Matcher\l}"]
GuesserXXX[label="{GuesserXXX|+  table : HashMap\l+  entrySet : HashMap\l+  size : HashMap\l+  modCount : HashMap\l+  threshold : HashMap\l+  loadFactor : HashMap\l+  keySet : AbstractMap\l+  values : AbstractMap\l+  serialVersionUID : HashMap\l+  DEFAULT_INITIAL_CAPACITY : HashMap\l+  MAXIMUM_CAPACITY : HashMap\l+  DEFAULT_LOAD_FACTOR : HashMap\l+  TREEIFY_THRESHOLD : HashMap\l+  UNTREEIFY_THRESHOLD : HashMap\l+  MIN_TREEIFY_CAPACITY : HashMap\l|+  init() : void\l+  replaceGuess() : Guesser$GuessMap\l+  generateGuess() : Object\l+  getGuess() : Object\l+  invoke() : Object\l}"]
ComparisonFailureXXX[label="{ComparisonFailureXXX|+  contextLength : ComparisonFailure$ComparisonCompactor\l+  expected : ComparisonFailure$ComparisonCompactor\l+  actual : ComparisonFailure$ComparisonCompactor\l+  ELLIPSIS : ComparisonFailure$ComparisonCompactor\l+  DIFF_END : ComparisonFailure$ComparisonCompactor\l+  DIFF_START : ComparisonFailure$ComparisonCompactor\l|+  init() : void\l+  compact() : String\l+  sharedPrefix() : String\l+  sharedSuffix() : String\l+  access100() : String\l+  access200() : String\l+  access300() : String\l+  access400() : String\l+  access500() : I\l}"]
JUnit4TestAdapterCache[label="{JUnit4TestAdapterCache|+  table : HashMap\l+  entrySet : HashMap\l+  size : HashMap\l+  modCount : HashMap\l+  threshold : HashMap\l+  loadFactor : HashMap\l+  keySet : AbstractMap\l+  values : AbstractMap\l+  serialVersionUID : HashMap\l+  fInstance : JUnit4TestAdapterCache\l+  DEFAULT_INITIAL_CAPACITY : HashMap\l+  MAXIMUM_CAPACITY : HashMap\l+  DEFAULT_LOAD_FACTOR : HashMap\l+  TREEIFY_THRESHOLD : HashMap\l+  UNTREEIFY_THRESHOLD : HashMap\l+  MIN_TREEIFY_CAPACITY : HashMap\l|+  init() : void\l+  getDefault() : JUnit4TestAdapterCache\l+  asTest() : Test\l+  createTest() : Test\l+  getNotifier() : RunNotifier\l+  asTestList() : List\l+  clinit() : void\l}"]
AllTheoriesRunnerTests[label="{AllTheoriesRunnerTests||+  init() : void\l}"]
ManagementFactoryXXX[label="{ManagementFactoryXXX|+  THREAD_MX_BEAN : ManagementFactory$ThreadHolder\l|+  init() : void\l+  getBean() : ThreadMXBean\l+  access100() : ThreadMXBean\l+  clinit() : void\l}"]
AllAssertionTests[label="{AllAssertionTests||+  init() : void\l}"]
ExpectedTestXXX[label="{ExpectedTestXXX||+  init() : void\l+  expected() : void\l}"]
ObjectContractTest[label="{ObjectContractTest|+  objects : ObjectContractTest\l|+  init() : void\l+  equalsThrowsNoException() : void\l+  equalsMeansEqualHashCodes() : void\l+  toStringMethod() : Method\l+  clinit() : void\l}"]
UnsuccessfulWithDataPointFieldsXXX[label="{UnsuccessfulWithDataPointFieldsXXX|+  THREE : UnsuccessfulWithDataPointFields$DataPointFieldsMustBePublic\l+  THREES : UnsuccessfulWithDataPointFields$DataPointFieldsMustBePublic\l+  FOUR : UnsuccessfulWithDataPointFields$DataPointFieldsMustBePublic\l+  FOURS : UnsuccessfulWithDataPointFields$DataPointFieldsMustBePublic\l+  FIVE : UnsuccessfulWithDataPointFields$DataPointFieldsMustBePublic\l+  FIVES : UnsuccessfulWithDataPointFields$DataPointFieldsMustBePublic\l|+  init() : void\l+  numbers() : void\l+  clinit() : void\l}"]
JUnitCoreReturnsCorrectExitCodeTestXXX[label="{JUnitCoreReturnsCorrectExitCodeTestXXX||+  init() : void\l+  peacefulSilence() : void\l}"]
WithDataPointMethodXXX[label="{WithDataPointMethodXXX|+  ONE : WithDataPointMethod$DataPointMethodReturnsMutableObject\l+  TWO : WithDataPointMethod$DataPointMethodReturnsMutableObject\l|+  init() : void\l+  empty() : List\l+  everythingsEmpty() : void\l+  clinit() : void\l}"]
TextRunnerTestXXX[label="{TextRunnerTestXXX|+  this$0 : TextRunnerTest$1\l|+  init() : void\l+  write() : void\l}"]
CategoryValidatorTestXXX[label="{CategoryValidatorTestXXX||+  init() : void\l+  methodWithCategoryAndBeforeClass() : void\l+  methodWithCategoryAndAfterClass() : void\l+  methodWithCategoryAndBefore() : void\l+  methodWithCategoryAndAfter() : void\l+  methodWithCategory() : void\l}"]
ValidationTestXXX[label="{ValidationTestXXX||+  init() : void\l+  a() : I\l}"]
WhenNoParametersMatchXXX[label="{WhenNoParametersMatchXXX|+  DATA : WhenNoParametersMatch$AssumptionsFail\l+  MATCHER : WhenNoParametersMatch$AssumptionsFail\l|+  init() : void\l+  nonZeroIntsAreFun() : void\l+  clinit() : void\l}"]
TestXXX[label="{TestXXX|+  backtrace : Throwable\l+  detailMessage : Throwable\l+  cause : Throwable\l+  stackTrace : Throwable\l+  suppressedExceptions : Throwable\l+  serialVersionUID : Throwable\l+  UNASSIGNED_STACK : Throwable\l+  SUPPRESSED_SENTINEL : Throwable\l+  NULL_CAUSE_MESSAGE : Throwable\l+  SELF_SUPPRESSION_MESSAGE : Throwable\l+  CAUSE_CAPTION : Throwable\l+  SUPPRESSED_CAPTION : Throwable\l+  EMPTY_THROWABLE_ARRAY : Throwable\l+  $assertionsDisabled : Throwable\l|+  init() : void\l}"]
FrameworkMethodTest[label="{FrameworkMethodTest|+  thrown : FrameworkMethodTest\l|+  init() : void\l+  cannotBeCreatedWithoutUnderlyingField() : void\l+  hasToStringWhichPrintsMethodName() : void\l+  presentAnnotationIsAvailable() : void\l+  missingAnnotationIsNotAvailable() : void\l}"]
MethodRoadieXXX[label="{MethodRoadieXXX|+  this$0 : MethodRoadie$2\l|+  init() : void\l+  run() : void\l}"]
FrameworkFieldTestXXX[label="{FrameworkFieldTestXXX|+  dummyField : FrameworkFieldTest$ClassWithDummyField\l+  annotatedField : FrameworkFieldTest$ClassWithDummyField\l|+  init() : void\l}"]
FailureList[label="{FailureList|+  failures : FailureList\l|+  init() : void\l+  result() : Result\l}"]
PotentialAssignmentTestXXX[label="{PotentialAssignmentTestXXX|+  this$0 : PotentialAssignmentTest$1\l|+  init() : void\l+  toString() : String\l}"]
ValidationTest[label="{ValidationTest||+  init() : void\l+  initializationErrorIsOnCorrectClass() : void\l+  nonStaticBeforeClass() : void\l}"]
FailedConstructionTestXXX[label="{FailedConstructionTestXXX||+  init() : void\l+  foo() : void\l}"]
InvalidTestClassErrorTestXXX[label="{InvalidTestClassErrorTestXXX||+  init() : void\l}"]
RuleContainer[label="{RuleContainer|+  orderValues : RuleContainer\l+  testRules : RuleContainer\l+  methodRules : RuleContainer\l+  ENTRY_COMPARATOR : RuleContainer\l|+  init() : void\l+  setOrder() : void\l+  add() : void\l+  getSortedEntries() : List\l+  apply() : Statement\l+  getSortedRules() : List\l+  clinit() : void\l}"]
AllValidationTests[label="{AllValidationTests||+  init() : void\l}"]
RuleMemberValidatorXXX[label="{RuleMemberValidatorXXX||+  init() : void\l+  validate() : void\l+  isDeclaringClassPublic() : Z\l}"]
SuiteXXX[label="{SuiteXXX||+  value() : Class\l}"]
MaxStarterTest[label="{MaxStarterTest|+  fMax : MaxStarterTest\l+  fMaxFile : MaxStarterTest\l|+  init() : void\l+  createMax() : void\l+  forgetMax() : void\l+  twoTestsNotRunComeBackInRandomOrder() : void\l+  preferNewTests() : void\l+  preferNewTestsOverTestsThatFailed() : void\l+  preferRecentlyFailed() : void\l+  sortTestsInMultipleClasses() : void\l+  rememberOldRuns() : void\l+  preferFast() : void\l+  listenersAreCalledCorrectlyInTheFaceOfFailures() : void\l+  testsAreOnlyIncludedOnceWhenExpandingForSorting() : void\l+  junit3TestsAreRunOnce() : void\l+  filterSingleMethodFromOldTestClass() : void\l+  testCountsStandUpToFiltration() : void\l+  assertFilterLeavesTestUnscathed() : void\l+  maxShouldSkipMalformedJUnit38Classes() : void\l+  correctErrorFromMalformedTest() : void\l+  halfMalformed() : void\l+  correctErrorFromHalfMalformedTest() : void\l}"]
ParameterizedAssertionErrorTest[label="{ParameterizedAssertionErrorTest|+  METHOD_NAME : ParameterizedAssertionErrorTest\l+  NULL_POINTER_EXCEPTION : ParameterizedAssertionErrorTest\l+  NO_OBJECTS : ParameterizedAssertionErrorTest\l+  A : ParameterizedAssertionErrorTest\l+  B : ParameterizedAssertionErrorTest\l+  B2 : ParameterizedAssertionErrorTest\l|+  init() : void\l+  equalParameterizedAssertionErrorsHaveSameToString() : void\l+  differentParameterizedAssertionErrorsHaveDifferentToStrings() : void\l+  equalsReturnsTrue() : void\l+  sameHashCodeWhenEquals() : void\l+  buildParameterizedAssertionError() : void\l+  isNotEqualToNull() : void\l+  canJoinWhenToStringFails() : void\l+  clinit() : void\l}"]
ParentRunnerTest[label="{ParentRunnerTest|+  log : ParentRunnerTest\l|+  init() : void\l+  useChildHarvester() : void\l+  testMultipleFilters() : void\l+  isEmpty() : Matcher\l+  failWithHelpfulMessageForProtectedClassRule() : void\l+  failWithHelpfulMessageForNonStaticClassRule() : void\l+  cannotBeCreatedWithNonPublicTestClass() : void\l+  assertClassHasFailureMessage() : void\l+  assertionErrorAtParentLevelTest() : void\l+  assumptionViolatedAtParentLevel() : void\l+  parentRunnerTestMethods() : void\l+  runTestWithParentRunner() : ParentRunnerTest$CountingRunListener\l+  clinit() : void\l}"]
MethodCall[label="{MethodCall|+  method : MethodCall\l+  args : MethodCall\l|+  init() : void\l+  equals() : Z\l+  hashCode() : I\l+  getReturnType() : Class\l+  toString() : String\l+  argListString() : String\l+  argList() : List\l+  stringableObject() : Object\l}"]
RuleMemberValidator[label="{RuleMemberValidator|+  annotation : RuleMemberValidator\l+  methods : RuleMemberValidator\l+  validatorStrategies : RuleMemberValidator\l+  CLASS_RULE_VALIDATOR : RuleMemberValidator\l+  RULE_VALIDATOR : RuleMemberValidator\l+  CLASS_RULE_METHOD_VALIDATOR : RuleMemberValidator\l+  RULE_METHOD_VALIDATOR : RuleMemberValidator\l|+  init() : void\l+  validate() : void\l+  validateMember() : void\l+  classRuleValidatorBuilder() : RuleMemberValidator$Builder\l+  testRuleValidatorBuilder() : RuleMemberValidator$Builder\l+  isRuleType() : Z\l+  isTestRule() : Z\l+  isMethodRule() : Z\l+  access1200() : Z\l+  access1300() : Z\l+  access1400() : Z\l+  clinit() : void\l}"]
WithDataPointMethod[label="{WithDataPointMethod||+  init() : void\l+  pickUpDataPointMethods() : void\l+  mutableObjectsAreCreatedAfresh() : void\l+  ignoreDataPointMethodsWithWrongTypes() : void\l+  ignoreDataPointMethodsWithoutAnnotation() : void\l+  failures() : List\l+  empty() : Matcher\l}"]
RunnerTest[label="{RunnerTest|+  wasRun : RunnerTest\l|+  init() : void\l+  newTestCount() : void\l+  oldTestCount() : void\l+  testFinished() : void\l+  access002() : Z\l}"]
TestResult[label="{TestResult|+  fFailures : TestResult\l+  fErrors : TestResult\l+  fListeners : TestResult\l+  fRunTests : TestResult\l+  fStop : TestResult\l|+  init() : void\l+  addError() : void\l+  addFailure() : void\l+  addListener() : void\l+  removeListener() : void\l+  cloneListeners() : List\l+  endTest() : void\l+  errorCount() : I\l+  errors() : Enumeration\l+  failureCount() : I\l+  failures() : Enumeration\l+  run() : void\l+  runCount() : I\l+  runProtected() : void\l+  shouldStop() : Z\l+  startTest() : void\l+  stop() : void\l+  wasSuccessful() : Z\l}"]
JUnit38ClassRunnerTest[label="{JUnit38ClassRunnerTest|+  count : JUnit38ClassRunnerTest\l|+  init() : void\l+  plansDecoratorCorrectly() : void\l+  canUnadaptAnAdapter() : void\l+  testListener() : void\l+  invalidTestMethodReportedCorrectly() : void\l+  getDescriptionWithAnnotation() : void\l+  getDescriptionWithAnnotationInSuper() : void\l+  assertAnnotationFiltering() : void\l+  filterNoTestsRemain() : void\l}"]
AllRulesTests[label="{AllRulesTests||+  init() : void\l}"]
FilterTest[label="{FilterTest||+  init() : void\l+  intersectionText() : void\l+  intersectSelf() : void\l+  intersectAll() : void\l}"]
AllSamplesTests[label="{AllSamplesTests||+  init() : void\l}"]
ParameterizedNamesTestXXX[label="{ParameterizedNamesTestXXX||+  init() : void\l+  data() : Collection\l+  test() : void\l}"]
TestWatchmanTest[label="{TestWatchmanTest||+  init() : void\l+  neitherLogSuccessNorFailedForViolatedAssumption() : void\l+  logFailingTest() : void\l}"]
Classes[label="{Classes||+  init() : void\l+  getClass() : Class\l}"]
BlockJUnit4ClassRunnerWithParametersTestXXX[label="{BlockJUnit4ClassRunnerWithParametersTestXXX||}"]
FilterFactoriesTest[label="{FilterFactoriesTest|+  expectedException : FilterFactoriesTest\l+  testName : FilterFactoriesTest\l|+  init() : void\l+  createSuiteRequest() : Request\l+  shouldCreateFilterWithArguments() : void\l+  shouldCreateFilterWithNoArguments() : void\l+  shouldPassOnDescriptionToFilterFactory() : void\l+  shouldCreateFilter() : void\l+  shouldThrowExceptionIfNotFilterFactory() : void\l+  shouldThrowExceptionIfNotInstantiable() : void\l}"]
NoGenericTypeParametersValidator[label="{NoGenericTypeParametersValidator|+  method : NoGenericTypeParametersValidator\l|+  init() : void\l+  validate() : void\l+  validateNoTypeParameterOnType() : void\l+  validateNoTypeParameterOnParameterizedType() : void\l+  validateNoTypeParameterOnWildcardType() : void\l+  validateNoTypeParameterOnGenericArrayType() : void\l}"]
TestWithParametersTest[label="{TestWithParametersTest|+  thrown : TestWithParametersTest\l+  DUMMY_NAME : TestWithParametersTest\l+  DUMMY_TEST_CLASS : TestWithParametersTest\l+  DUMMY_PARAMETERS : TestWithParametersTest\l|+  init() : void\l+  cannotBeCreatedWithoutAName() : void\l+  cannotBeCreatedWithoutTestClass() : void\l+  cannotBeCreatedWithoutParameters() : void\l+  doesNotAllowToModifyProvidedParameters() : void\l+  doesNotConsiderParametersWhichChangedAfterTestInstantiation() : void\l+  isEqualToTestWithSameNameAndTestClassAndParameters() : void\l+  isNotEqualToTestWithDifferentName() : void\l+  isNotEqualToTestWithDifferentTestClass() : void\l+  isNotEqualToTestWithDifferentParameters() : void\l+  isNotEqualToObjectWithDifferentClass() : void\l+  hasSameHashCodeAsEqualTest() : void\l+  hasMeaningfulToString() : void\l+  clinit() : void\l}"]
ExpectExceptionTest[label="{ExpectExceptionTest||+  init() : void\l+  whenExpectingAssumptionViolatedExceptionStatementsThrowingItShouldPass() : void\l+  whenExpectingAssumptionViolatedExceptionStatementsThrowingSubclassShouldPass() : void\l+  whenExpectingAssumptionViolatedExceptionStatementsThrowingDifferentExceptionShouldFail() : void\l+  whenExpectingAssumptionViolatedExceptionStatementsPassingShouldFail() : void\l}"]
ComparisonCompactor[label="{ComparisonCompactor|+  fContextLength : ComparisonCompactor\l+  fExpected : ComparisonCompactor\l+  fActual : ComparisonCompactor\l+  fPrefix : ComparisonCompactor\l+  fSuffix : ComparisonCompactor\l+  ELLIPSIS : ComparisonCompactor\l+  DELTA_END : ComparisonCompactor\l+  DELTA_START : ComparisonCompactor\l|+  init() : void\l+  compact() : String\l+  compactString() : String\l+  findCommonPrefix() : void\l+  findCommonSuffix() : void\l+  computeCommonPrefix() : String\l+  computeCommonSuffix() : String\l+  areStringsEqual() : Z\l}"]
UseSuiteAsASuperclassTest[label="{UseSuiteAsASuperclassTest||+  init() : void\l+  ensureTestsAreRun() : void\l}"]
AnnotationsValidatorTest[label="{AnnotationsValidatorTest||+  init() : void\l+  validatorIsCalledForAClass() : void\l+  validatorIsCalledForAMethod() : void\l+  validatorIsCalledForAField() : void\l+  assertClassHasFailureMessage() : void\l}"]
AllDescriptionTests[label="{AllDescriptionTests||+  init() : void\l}"]
Description[label="{Description|+  fChildren : Description\l+  fDisplayName : Description\l+  fUniqueId : Description\l+  fAnnotations : Description\l+  fTestClass : Description\l+  serialVersionUID : Description\l+  METHOD_AND_CLASS_NAME_PATTERN : Description\l+  EMPTY : Description\l+  TEST_MECHANISM : Description\l|+  createSuiteDescription() : Description\l+  createTestDescription() : Description\l+  formatDisplayName() : String\l+  init() : void\l+  getDisplayName() : String\l+  addChild() : void\l+  getChildren() : ArrayList\l+  isSuite() : Z\l+  isTest() : Z\l+  testCount() : I\l+  hashCode() : I\l+  equals() : Z\l+  toString() : String\l+  isEmpty() : Z\l+  childlessCopy() : Description\l+  getAnnotation() : Annotation\l+  getAnnotations() : Collection\l+  getTestClass() : Class\l+  getClassName() : String\l+  getMethodName() : String\l+  methodAndClassNamePatternGroupOrDefault() : String\l+  clinit() : void\l}"]
AfterClass[label="{AfterClass||}"]
BeforeClass[label="{BeforeClass||}"]
MethodValidator[label="{MethodValidator|+  errors : MethodValidator\l+  testClass : MethodValidator\l|+  init() : void\l+  validateInstanceMethods() : void\l+  validateStaticMethods() : void\l+  validateMethodsForDefaultRunner() : List\l+  assertValid() : void\l+  validateNoArgConstructor() : void\l+  validateTestMethods() : void\l}"]
WithUnresolvedGenericTypeVariablesOnTheoryParms[label="{WithUnresolvedGenericTypeVariablesOnTheoryParms||+  init() : void\l+  whereTypeVariableIsOnTheTheory() : void\l+  whereTypeVariableIsOnTheoryParm() : void\l+  whereTypeVariableIsOnParameterizedTheoryParm() : void\l+  whereTypeVariableIsOnWildcardUpperBoundOnTheoryParm() : void\l+  whereTypeVariableIsOnWildcardLowerBoundOnTheoryParm() : void\l+  whereTypeVariableIsOnArrayTypeOnTheoryParm() : void\l+  whereTypeVariableIsOnComponentOfArrayTypeOnTheoryParm() : void\l+  whereTypeVariableIsOnTheoryClass() : void\l+  whereTypeVariablesAbound() : void\l}"]
MatcherTest[label="{MatcherTest|+  SINGLE_FAILURE : MatcherTest\l+  ANY_FAILURE : MatcherTest\l+  TWO_FAILURES_ONE_CHEESE : MatcherTest\l|+  init() : void\l+  differentMatchersHaveDifferentDescriptions() : void\l+  failure() : Failure\l+  clinit() : void\l}"]
AssumingInTheoriesTest[label="{AssumingInTheoriesTest||+  init() : void\l+  noTheoryAnnotationMeansAssumeShouldIgnore() : void\l+  theoryMeansOnlyAssumeShouldFail() : void\l}"]
TestWatcherTestXXX[label="{TestWatcherTestXXX|+  watcher : TestWatcherTest$InternalViolatedAssumptionTest\l+  watchedLog : TestWatcherTest$InternalViolatedAssumptionTest\l|+  init() : void\l+  succeeds() : void\l+  access100() : StringBuilder\l+  access102() : StringBuilder\l+  clinit() : void\l}"]
ValidationError[label="{ValidationError|+  backtrace : Throwable\l+  detailMessage : Throwable\l+  cause : Throwable\l+  stackTrace : Throwable\l+  suppressedExceptions : Throwable\l+  serialVersionUID : Throwable\l+  UNASSIGNED_STACK : Throwable\l+  SUPPRESSED_SENTINEL : Throwable\l+  NULL_CAUSE_MESSAGE : Throwable\l+  SELF_SUPPRESSION_MESSAGE : Throwable\l+  CAUSE_CAPTION : Throwable\l+  SUPPRESSED_CAPTION : Throwable\l+  EMPTY_THROWABLE_ARRAY : Throwable\l+  $assertionsDisabled : Throwable\l|+  init() : void\l}"]
CategoriesAndParameterizedTest[label="{CategoriesAndParameterizedTest||+  init() : void\l+  doesNotRunTestsWithoutCategory() : void\l+  runsTestsWithoutCategory() : void\l+  runsTestMethodWithCategory() : void\l}"]
After[label="{After||}"]
AllTheoriesInternalTests[label="{AllTheoriesInternalTests||+  init() : void\l}"]
ParentRunnerFilteringTest[label="{ParentRunnerFilteringTest||+  init() : void\l+  notThisMethodName() : Filter\l+  testSuiteFiltering() : void\l+  testSuiteFilteringWithUnmodifyableChildList() : void\l+  testRunSuiteFiltering() : void\l+  testCountClassFiltering() : void\l+  testCountSuiteFiltering() : void\l}"]
CategoryTest[label="{CategoryTest||+  init() : void\l+  testCountOnJustA() : void\l+  testCount() : void\l+  testCountOnAWithoutSlowTests() : void\l+  testsThatAreBothIncludedAndExcludedAreExcluded() : void\l+  testCountWithExplicitIncludeFilter() : void\l+  testCountWithExplicitExcludeFilter() : void\l+  testCountWithExplicitExcludeFilter_usingConstructor() : void\l+  categoryFilterLeavesOnlyMatchingMethods() : void\l+  categoryFilterLeavesOnlyMatchingMethods_usingConstructor() : void\l+  categoryFilterRejectsIncompatibleCategory() : void\l+  ifNoTestsToRunUseErrorRunner() : void\l+  describeACategoryFilter() : void\l+  describeMultipleCategoryFilter() : void\l+  runMethodWithTwoCategories() : void\l+  subclassesOfIncludedCategoriesAreRun() : void\l+  allIncludedSuiteCategoriesMustBeMatched() : void\l+  anyMethodWithExcludedCategoryWillBeExcluded() : void\l+  classesCanBeCategories() : void\l+  testInheritance() : void\l+  emptyCategoriesSuite() : void\l+  ignoredTest() : void\l+  oneRunnableOthersAvoided() : void\l+  testCountWithMultipleExcludeFilter() : void\l+  testCountWithMultipleIncludeFilter() : void\l+  noIncludeCategoryAnnotation() : void\l+  sameAsNoIncludeCategoryAnnotation() : void\l}"]
SystemExitTestXXX[label="{SystemExitTestXXX||+  init() : void\l+  main() : void\l}"]
ChecksTest[label="{ChecksTest||+  init() : void\l+  notNullShouldReturnNonNullValues() : void\l+  notNullShouldThrowOnNullValues() : void\l+  notNullWithMessageShouldReturnNonNullValues() : void\l+  notNullWithMessageShouldThrowOnNullValues() : void\l+  notNullWithNullMessageShouldThrowOnNullValues() : void\l}"]
TestMethodTest[label="{TestMethodTest||+  init() : void\l+  testFailures() : void\l+  validateInheritedMethods() : void\l+  dontValidateShadowedMethods() : void\l+  validateAllMethods() : List\l+  ignoreRunner() : void\l+  compatibility() : void\l+  overloaded() : void\l+  constructorParameter() : void\l+  onlyIgnoredMethodsIsStillFineTestClass() : void\l}"]
AssertionTest[label="{AssertionTest|+  ASSERTION_ERROR_EXPECTED : AssertionTest\l|+  init() : void\l+  fails() : void\l+  failWithNoMessageToString() : void\l+  failWithMessageToString() : void\l+  arraysNotEqual() : void\l+  arraysNotEqualWithMessage() : void\l+  arraysExpectedNullMessage() : void\l+  arraysActualNullMessage() : void\l+  arraysDifferentLengthDifferingAtStartMessage() : void\l+  arraysDifferentLengthDifferingAtEndMessage() : void\l+  arraysDifferentLengthDifferingAtEndAndExpectedArrayLongerMessage() : void\l+  arraysElementsDiffer() : void\l+  arraysDifferAtElement0nullMessage() : void\l+  arraysDifferAtElement1nullMessage() : void\l+  arraysDifferAtElement0withMessage() : void\l+  arraysDifferAtElement1withMessage() : void\l+  multiDimensionalArraysAreEqual() : void\l+  multiDimensionalIntArraysAreEqual() : void\l+  oneDimensionalPrimitiveArraysAreEqual() : void\l+  oneDimensionalDoubleArraysAreNotEqual() : void\l+  oneDimensionalFloatArraysAreNotEqual() : void\l+  oneDimensionalBooleanArraysAreNotEqual() : void\l+  IntegerDoesNotEqualLong() : void\l+  intsEqualLongs() : void\l+  multiDimensionalArraysDeclaredAsOneDimensionalAreEqual() : void\l+  multiDimensionalArraysAreNotEqual() : void\l+  multiDimensionalArraysAreNotEqualNoMessage() : void\l+  twoDimensionalArraysDifferentOuterLengthNotEqual() : void\l+  primitiveArraysConvertedToStringCorrectly() : void\l+  twoDimensionalArraysConvertedToStringCorrectly() : void\l+  twoDimensionalArraysDifferentInnerLengthNotEqual() : void\l+  assertArrayEqualsFailure() : void\l+  multiDimensionalArraysDifferentLengthMessage() : void\l+  multiDimensionalArraysDifferentLengthNoMessage() : void\l+  arraysWithNullElementEqual() : void\l+  stringsDifferWithUserMessage() : void\l+  arraysEqual() : void\l+  arraysEqualWithMessage() : void\l+  equals() : void\l+  notEqualsObjectWithNull() : void\l+  notEqualsNullWithObject() : void\l+  notEqualsObjectWithNullWithMessage() : void\l+  notEqualsNullWithObjectWithMessage() : void\l+  objectsNotEquals() : void\l+  stringsNotEqual() : void\l+  booleansNotEqual() : void\l+  bytesNotEqual() : void\l+  charsNotEqual() : void\l+  shortsNotEqual() : void\l+  intsNotEqual() : void\l+  longsNotEqual() : void\l+  floatsNotEqual() : void\l+  floatsNotEqualWithoutDelta() : void\l+  floatsNotDoublesInArrays() : void\l+  bigDecimalsNotEqual() : void\l+  doublesNotEqual() : void\l+  naNsAreEqual() : void\l+  nullNullmessage() : void\l+  nullWithMessage() : void\l+  same() : void\l+  notSame() : void\l+  objectsNotSame() : void\l+  objectsAreSame() : void\l+  sameWithMessage() : void\l+  sameNullMessage() : void\l+  notSameWithMessage() : void\l+  notSameNullMessage() : void\l+  nullMessage() : void\l+  nullMessageDisappearsWithStringAssertEquals() : void\l+  nullMessageDisappearsWithAssertEquals() : void\l+  arraysDeclaredAsObjectAreComparedAsObjects() : void\l+  implicitTypecastEquality() : void\l+  errorMessageDistinguishesDifferentValuesWithSameToString() : void\l+  assertThatIncludesDescriptionOfTestedValueInErrorMessage() : void\l+  assertThatIncludesAdvancedMismatch() : void\l+  assertThatDescriptionCanBeElided() : void\l+  nullAndStringNullPrintCorrectError() : void\l+  stringNullAndNullWorksToo() : void\l+  nullToString() : void\l+  compareBigDecimalAndInteger() : void\l+  sameObjectIsNotEqual() : void\l+  objectsWithDiferentReferencesAreNotEqual() : void\l+  assertNotEqualsIncludesCorrectMessage() : void\l+  assertNotEqualsIncludesTheValueBeingTested() : void\l+  assertNotEqualsWorksWithPrimitiveTypes() : void\l+  assertNotEqualsConsidersDeltaCorrectly() : void\l+  assertNotEqualsConsidersFloatDeltaCorrectly() : void\l+  assertNotEqualsIgnoresDeltaOnNaN() : void\l+  assertNotEqualsIgnoresFloatDeltaOnNaN() : void\l+  expectThrowsRequiresAnExceptionToBeThrown() : void\l+  expectThrowsIncludesAnInformativeDefaultMessage() : void\l+  expectThrowsReturnsTheSameObjectThrown() : void\l+  expectThrowsDetectsTypeMismatchesViaExplicitTypeHint() : void\l+  expectThrowsWrapsAndPropagatesUnexpectedExceptions() : void\l+  expectThrowsSuppliesACoherentErrorMessageUponTypeMismatch() : void\l+  expectThrowsUsesCanonicalNameUponTypeMismatch() : void\l+  expectThrowsUsesNameUponTypeMismatchWithAnonymousClass() : void\l+  expectThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown() : void\l+  nonThrowingRunnable() : ThrowingRunnable\l+  throwingRunnable() : ThrowingRunnable\l}"]
NoTestCaseClass[label="{NoTestCaseClass||+  init() : void\l+  testSuccess() : void\l}"]
AnnotationValidatorFactory[label="{AnnotationValidatorFactory|+  VALIDATORS_FOR_ANNOTATION_TYPES : AnnotationValidatorFactory\l|+  init() : void\l+  createAnnotationValidator() : AnnotationValidator\l+  clinit() : void\l}"]
TheoriesPerformanceTest[label="{TheoriesPerformanceTest|+  TESTING_PERFORMANCE : TheoriesPerformanceTest\l|+  init() : void\l+  tryCombinationsQuickly() : void\l}"]
FailingDataPointMethods[label="{FailingDataPointMethods||+  init() : void\l+  shouldFailFromExceptionsInSingleDataPointMethods() : void\l+  shouldFailFromExceptionsInDataPointArrayMethods() : void\l+  shouldIgnoreSingleDataPointMethodExceptionsOnRequest() : void\l+  shouldIgnoreMultipleDataPointMethodExceptionsOnRequest() : void\l+  shouldNotIgnoreNonMatchingSingleDataPointExceptions() : void\l+  shouldNotIgnoreNonMatchingMultipleDataPointExceptions() : void\l}"]
RunNotifierTest[label="{RunNotifierTest|+  fNotifier : RunNotifierTest\l|+  init() : void\l+  notifiesSecondListenerIfFirstThrowsException() : void\l+  hasNoProblemsWithFailingListeners() : void\l+  addAndRemoveWithNonThreadSafeListener() : void\l+  addFirstAndRemoveWithNonThreadSafeListener() : void\l+  addAndRemoveWithThreadSafeListener() : void\l+  addFirstAndRemoveWithThreadSafeListener() : void\l+  wrapIfNotThreadSafeShouldNotWrapThreadSafeListeners() : void\l+  wrapIfNotThreadSafeShouldWrapNonThreadSafeListeners() : void\l}"]
ExpectedExceptionTest[label="{ExpectedExceptionTest|+  classUnderTest : ExpectedExceptionTest\l+  matcher : ExpectedExceptionTest\l+  ARBITRARY_MESSAGE : ExpectedExceptionTest\l|+  testsWithEventMatcher() : Collection\l+  init() : void\l+  runTestAndVerifyResult() : void\l}"]
StubbedTheoriesTest[label="{StubbedTheoriesTest||+  init() : void\l+  ask() : void\l}"]
ParallelClassTest[label="{ParallelClassTest|+  TIMEOUT : ParallelClassTest\l+  fExample1One : ParallelClassTest\l+  fExample1Two : ParallelClassTest\l+  fExample2One : ParallelClassTest\l+  fExample2Two : ParallelClassTest\l+  fSynchronizer : ParallelClassTest\l|+  init() : void\l+  init() : void\l+  testsRunInParallel() : void\l+  access000() : CountDownLatch\l+  access102() : Thread\l+  access202() : Thread\l+  access302() : Thread\l+  access402() : Thread\l+  clinit() : void\l}"]
AllCoreTests[label="{AllCoreTests||+  init() : void\l}"]
AllJUnit3CompatibilityTests[label="{AllJUnit3CompatibilityTests||+  init() : void\l}"]
AllInternalTests[label="{AllInternalTests||+  init() : void\l}"]
ReflectiveThreadMXBeanXXX[label="{ReflectiveThreadMXBeanXXX|+  getThreadCpuTimeMethod : ReflectiveThreadMXBean$Holder\l+  isThreadCpuTimeSupportedMethod : ReflectiveThreadMXBean$Holder\l+  FAILURE_MESSAGE : ReflectiveThreadMXBean$Holder\l|+  init() : void\l+  clinit() : void\l}"]
FilterOptionIntegrationTest[label="{FilterOptionIntegrationTest|+  jUnitCore : FilterOptionIntegrationTest\l+  testListener : FilterOptionIntegrationTest\l+  INCLUDES_DUMMY_CATEGORY_0 : FilterOptionIntegrationTest\l+  EXCLUDES_DUMMY_CATEGORY_1 : FilterOptionIntegrationTest\l|+  init() : void\l+  setUp() : void\l+  shouldRunAllTests() : void\l+  shouldExcludeSomeTests() : void\l+  shouldIncludeSomeTests() : void\l+  shouldCombineFilters() : void\l+  runJUnit() : Result\l+  assertWasRun() : void\l+  assertWasNotRun() : void\l+  clinit() : void\l}"]
JUnit4ClassRunnerTestXXX[label="{JUnit4ClassRunnerTestXXX||+  init() : void\l+  success() : void\l+  failure() : void\l}"]
PublicClassValidatorTest[label="{PublicClassValidatorTest|+  validator : PublicClassValidatorTest\l|+  init() : void\l+  acceptsPublicClass() : void\l+  rejectsNonPublicClass() : void\l}"]
ClassLevelMethodsWithIgnoredTestsTest[label="{ClassLevelMethodsWithIgnoredTestsTest|+  FAILURE_MESSAGE : ClassLevelMethodsWithIgnoredTestsTest\l|+  init() : void\l+  beforeClassShouldNotRunWhenAllTestsAreIgnored() : void\l+  beforeClassShouldNotRunWhenWholeClassIsIgnored() : void\l+  afterClassShouldNotRunWhenAllTestsAreIgnored() : void\l+  beforeClassShouldNotRunWhenAllTestsAreFiltered() : void\l+  classRuleShouldNotBeAppliedWhenAllTestsAreIgnored() : void\l+  runClassAndVerifyNoFailures() : void\l+  analyseResult() : void\l+  analyzeFailure() : void\l}"]
ConcurrentRunNotifierTest[label="{ConcurrentRunNotifierTest|+  fNotifier : ConcurrentRunNotifierTest\l+  TIMEOUT : ConcurrentRunNotifierTest\l|+  init() : void\l+  realUsage() : void\l+  reportConcurrentFailuresAfterAddListener() : void\l+  reportConcurrentFailuresAfterAddFirstListener() : void\l+  countReportedTestFailures() : I\l+  access100() : RunNotifier\l+  access200() : I\l}"]
TestClassTest[label="{TestClassTest||+  init() : void\l}"]
PublicClassValidatorTestXXX[label="{PublicClassValidatorTestXXX||+  init() : void\l}"]
ExpectedExceptionMatcherBuilder[label="{ExpectedExceptionMatcherBuilder|+  matchers : ExpectedExceptionMatcherBuilder\l|+  init() : void\l+  add() : void\l+  expectsThrowable() : Z\l+  build() : Matcher\l+  allOfTheMatchers() : Matcher\l+  castedMatchers() : List\l+  cast() : Matcher\l}"]
AllDeprecatedTests[label="{AllDeprecatedTests||+  init() : void\l}"]
ParallelClassTestXXX[label="{ParallelClassTestXXX||+  init() : void\l+  one() : void\l+  two() : void\l}"]
SingleMethodTest[label="{SingleMethodTest|+  count : SingleMethodTest\l|+  init() : void\l+  oneTimeSetup() : void\l+  parameterizedFilterToSingleMethod() : void\l+  parameterizedBeforeClass() : void\l+  filteringAffectsPlan() : void\l+  nonexistentMethodCreatesFailure() : void\l+  filteringAwayEverythingThrowsException() : void\l+  eliminateUnnecessaryTreeBranches() : void\l+  classesWithSuiteMethodsAreFiltered() : void\l}"]
ParentRunnerClassLoaderTest[label="{ParentRunnerClassLoaderTest|+  $assertionsDisabled : ParentRunnerClassLoaderTest\l|+  init() : void\l+  testClassRuleAccessToClassInAnotherClassLoader() : void\l+  testDescriptionContainCorrectTestClass() : void\l+  testBackwardCompatibilityWithOverrideGetName() : void\l+  runTestWithParentRunner() : void\l+  wrapToClassLoader() : Class\l+  clinit() : void\l}"]
MainRunner[label="{MainRunner||+  init() : void\l+  runWithCheckForSystemExit() : Integer\l}"]
WithAutoGeneratedDataPoints[label="{WithAutoGeneratedDataPoints||+  init() : void\l+  shouldAutomaticallyGenerateEnumDataPoints() : void\l+  shouldAutomaticallyGenerateBooleanDataPoints() : void\l+  shouldNotAutogenerateEnumDataPointsWhenSpecificDataPointGiven() : void\l+  shouldNotAutogenerateBooleanDataPointsWhenSpecificDataPointGiven() : void\l}"]
Version[label="{Version||+  init() : void\l+  id() : String\l+  main() : void\l}"]
SortableTestXXX[label="{SortableTestXXX||+  init() : void\l+  compare() : I\l}"]
AssumingInTheoriesTestXXX[label="{AssumingInTheoriesTestXXX|+  FALSE : AssumingInTheoriesTest$TheoryWithNoUnassumedParameters\l|+  init() : void\l+  theoryWithNoUnassumedParameters() : void\l}"]
TestRunListener[label="{TestRunListener|+  STATUS_ERROR : TestRunListener\l+  STATUS_FAILURE : TestRunListener\l|+  testRunStarted() : void\l+  testRunEnded() : void\l+  testRunStopped() : void\l+  testStarted() : void\l+  testEnded() : void\l+  testFailed() : void\l}"]
SystemExitTest[label="{SystemExitTest|+  EXIT_CODE : SystemExitTest\l|+  init() : void\l+  failureCausesExitCodeOf1() : void\l}"]
TestTimedOutException[label="{TestTimedOutException|+  timeUnit : TestTimedOutException\l+  timeout : TestTimedOutException\l+  backtrace : Throwable\l+  detailMessage : Throwable\l+  cause : Throwable\l+  stackTrace : Throwable\l+  suppressedExceptions : Throwable\l+  serialVersionUID : Throwable\l+  UNASSIGNED_STACK : Throwable\l+  SUPPRESSED_SENTINEL : Throwable\l+  NULL_CAUSE_MESSAGE : Throwable\l+  SELF_SUPPRESSION_MESSAGE : Throwable\l+  CAUSE_CAPTION : Throwable\l+  SUPPRESSED_CAPTION : Throwable\l+  EMPTY_THROWABLE_ARRAY : Throwable\l+  $assertionsDisabled : Throwable\l|+  init() : void\l+  getTimeout() : J\l+  getTimeUnit() : TimeUnit\l}"]
ResultMatchersTest[label="{ResultMatchersTest||+  init() : void\l+  hasFailuresHasGoodDescription() : void\l+  hasFailuresDescriptionReflectsInput() : void\l+  hasFailureContaining_givenResultWithNoFailures() : void\l+  hasFailureContaining_givenResultWithOneFailure() : void\l}"]
WhenNoParametersMatch[label="{WhenNoParametersMatch|+  ints : WhenNoParametersMatch\l+  matchers : WhenNoParametersMatch\l|+  init() : void\l+  showFailedAssumptionsWhenNoParametersFound() : void\l+  clinit() : void\l}"]
AllRunnerTests[label="{AllRunnerTests||+  init() : void\l}"]
Rule[label="{Rule|+  DEFAULT_ORDER : Rule\l|+  order() : I\l}"]
MultipleFailureExceptionTest[label="{MultipleFailureExceptionTest|+  LINE_SEPARATOR : MultipleFailureExceptionTest\l|+  init() : void\l+  assertEmptyDoesNotThrowForEmptyList() : void\l+  assertEmptyRethrowsSingleRuntimeException() : void\l+  assertEmptyRethrowsSingleError() : void\l+  assertEmptyThrowsMultipleFailureExceptionForManyThrowables() : void\l+  assertEmptyErrorListConstructorFailure() : void\l+  assertEmptyWrapsAssumptionFailuresForManyThrowables() : void\l+  clinit() : void\l}"]
ParallelMethodTestXXX[label="{ParallelMethodTestXXX|+  fSynchronizer : ParallelMethodTest$Example\l|+  init() : void\l+  init() : void\l+  one() : void\l+  two() : void\l}"]
JUnit4TestAdapterTest[label="{JUnit4TestAdapterTest||+  init() : void\l+  doTest() : void\l+  testJUnit4Suite() : void\l+  testJUnit3Suite() : void\l+  testJUnit4SuiteThatContainsJUnit3SuiteClass() : void\l}"]
PotentialAssignmentTest[label="{PotentialAssignmentTest||+  init() : void\l+  shouldUseQuotedValueInDescription() : void\l+  shouldNotUseQuotesForNullValueDescriptions() : void\l+  shouldIncludeFailureInDescriptionIfToStringFails() : void\l+  shouldReturnGivenValue() : void\l}"]
EnclosedTestXXX[label="{EnclosedTestXXX||+  init() : void\l}"]
SampleJUnit4Tests[label="{SampleJUnit4Tests||+  init() : void\l}"]
AllMaxTests[label="{AllMaxTests||+  init() : void\l}"]
GuesserQueue[label="{GuesserQueue|+  lastRemoved : GuesserQueue\l+  elementData : ArrayList\l+  size : ArrayList\l+  modCount : AbstractList\l+  serialVersionUID : ArrayList\l+  DEFAULT_CAPACITY : ArrayList\l+  EMPTY_ELEMENTDATA : ArrayList\l+  DEFAULTCAPACITY_EMPTY_ELEMENTDATA : ArrayList\l+  MAX_ARRAY_SIZE : AbstractCollection\l|+  init() : void\l+  forSingleValues() : GuesserQueue\l+  update() : void\l+  remove() : Object\l}"]
MethodSorter[label="{MethodSorter|+  DEFAULT : MethodSorter\l+  NAME_ASCENDING : MethodSorter\l|+  getDeclaredMethods() : Method\l+  init() : void\l+  getSorter() : Comparator\l+  clinit() : void\l}"]
TestedOn[label="{TestedOn||+  ints() : [I\l}"]
FrameworkMethodTestXXX[label="{FrameworkMethodTestXXX||+  init() : void\l+  dummyMethod() : void\l+  annotatedDummyMethod() : void\l}"]
WithNamedDataPointsXXX[label="{WithNamedDataPointsXXX|+  badStrings : WithNamedDataPoints$HasSpecificDatapointsParameters\l+  badString : WithNamedDataPoints$HasSpecificDatapointsParameters\l+  goodStrings : WithNamedDataPoints$HasSpecificDatapointsParameters\l+  goodString : WithNamedDataPoints$HasSpecificDatapointsParameters\l|+  init() : void\l+  methodStrings() : String\l+  methodString() : String\l+  otherMethod() : String\l+  otherSingleValueMethod() : String\l+  theory() : void\l+  clinit() : void\l}"]
Checks[label="{Checks||+  init() : void\l+  notNull() : Object\l}"]
FixMethodOrder[label="{FixMethodOrder||+  value() : MethodSorters\l}"]
ResultMatchers[label="{ResultMatchers||+  init() : void\l+  isSuccessful() : Matcher\l+  failureCountIs() : Matcher\l+  hasSingleFailureContaining() : Matcher\l+  hasSingleFailureMatching() : Matcher\l+  hasFailureContaining() : Matcher\l}"]
NoTestsRemainException[label="{NoTestsRemainException|+  backtrace : Throwable\l+  detailMessage : Throwable\l+  cause : Throwable\l+  stackTrace : Throwable\l+  suppressedExceptions : Throwable\l+  serialVersionUID : Throwable\l+  UNASSIGNED_STACK : Throwable\l+  SUPPRESSED_SENTINEL : Throwable\l+  NULL_CAUSE_MESSAGE : Throwable\l+  SELF_SUPPRESSION_MESSAGE : Throwable\l+  CAUSE_CAPTION : Throwable\l+  SUPPRESSED_CAPTION : Throwable\l+  EMPTY_THROWABLE_ARRAY : Throwable\l+  $assertionsDisabled : Throwable\l|+  init() : void\l}"]
ParameterizedAssertionErrorTestXXX[label="{ParameterizedAssertionErrorTestXXX|+  this$0 : ParameterizedAssertionErrorTest$1\l|+  init() : void\l+  toString() : String\l}"]
JUnitCommandLineParseResult[label="{JUnitCommandLineParseResult|+  filterSpecs : JUnitCommandLineParseResult\l+  classes : JUnitCommandLineParseResult\l+  parserErrors : JUnitCommandLineParseResult\l|+  init() : void\l+  getFilterSpecs() : List\l+  getClasses() : List\l+  parse() : JUnitCommandLineParseResult\l+  parseArgs() : void\l+  parseOptions() : String\l+  copyArray() : String\l+  parseParameters() : void\l+  errorReport() : Request\l+  createRequest() : Request\l+  applyFilterSpecs() : Request\l}"]
AllCategoriesTests[label="{AllCategoriesTests||+  init() : void\l}"]
AllRunningTests[label="{AllRunningTests||+  init() : void\l}"]
Assume[label="{Assume||+  init() : void\l+  assumeTrue() : void\l+  assumeFalse() : void\l+  assumeNotNull() : void\l+  assumeThat() : void\l+  assumeNoException() : void\l}"]
StackTracesTest[label="{StackTracesTest|+  EOL : StackTracesTest\l+  executorService : StackTracesTest\l|+  init() : void\l+  startExecutorService() : void\l+  shutDownExecutorService() : void\l+  getTrimmedStackForJUnit4TestFailingInTestMethod() : void\l+  getTrimmedStackForJUnit4TestFailingInTestMethodWithCause() : void\l+  getTrimmedStackForJUnit4TestFailingInBeforeMethod() : void\l+  getTrimmedStackForJUnit3TestFailingInTestMethod() : void\l+  getTrimmedStackForJUnit3TestFailingInSetupMethod() : void\l+  getTrimmedStackForJUnit4TestFailingInTestRule() : void\l+  getTrimmedStackForJUnit4TestFailingInClassRule() : void\l+  getTrimmedStackForJUnit4TestFailingInMethodRule() : void\l+  getTrimmedStackWithSuppressedExceptions() : void\l+  message() : StackTracesTest$StringMatcher\l+  at() : StackTracesTest$StringMatcher\l+  framesInCommon() : StackTracesTest$StringMatcher\l+  framesTrimmed() : StackTracesTest$StringMatcher\l+  runTest() : Result\l+  assertHasTrimmedTrace() : void\l+  clinit() : void\l}"]
SpecificDataPointsSupplierTestXXX[label="{SpecificDataPointsSupplierTestXXX|+  values : SpecificDataPointsSupplierTest$TestClassWithNamedDataPoints\l+  otherValues : SpecificDataPointsSupplierTest$TestClassWithNamedDataPoints\l+  singleValue : SpecificDataPointsSupplierTest$TestClassWithNamedDataPoints\l+  otherSingleValue : SpecificDataPointsSupplierTest$TestClassWithNamedDataPoints\l|+  init() : void\l+  getValues() : String\l+  getSingleValue() : String\l+  getSingleOtherValue() : String\l+  getOtherValues() : String\l+  clinit() : void\l}"]
AllParallelTests[label="{AllParallelTests||+  init() : void\l}"]
AssumptionViolatedExceptionTest[label="{AssumptionViolatedExceptionTest|+  TWO : AssumptionViolatedExceptionTest\l+  IS_THREE : AssumptionViolatedExceptionTest\l+  NULL : AssumptionViolatedExceptionTest\l|+  init() : void\l+  toStringReportsMatcher() : void\l+  toStringReportsValue() : void\l+  assumptionViolatedExceptionWithMatcherDescribesItself() : void\l+  simpleAssumptionViolatedExceptionDescribesItself() : void\l+  canInitCauseWithInstanceCreatedWithString() : void\l+  canSetCauseWithInstanceCreatedWithObjectAndMatcher() : void\l+  canSetCauseWithInstanceCreatedWithAssumptionObjectAndMatcher() : void\l+  canSetCauseWithInstanceCreatedWithMainConstructor() : void\l+  canSetCauseWithInstanceCreatedWithExplicitThrowableConstructor() : void\l+  clinit() : void\l}"]
JUnitCore[label="{JUnitCore|+  notifier : JUnitCore\l|+  init() : void\l+  main() : void\l+  runClasses() : Result\l+  runMain() : Result\l+  getVersion() : String\l+  run() : Result\l+  addListener() : void\l+  removeListener() : void\l+  defaultComputer() : Computer\l}"]
FailedConstructionTest[label="{FailedConstructionTest||+  init() : void\l+  failedConstructionIsTestFailure() : void\l}"]
Sorter[label="{Sorter|+  comparator : Sorter\l+  NULL : Sorter\l|+  init() : void\l+  apply() : void\l+  compare() : I\l+  clinit() : void\l}"]
Correspondent[label="{Correspondent||+  getAnswer() : String\l}"]
RuleContainerXXX[label="{RuleContainerXXX|+  rule : RuleContainer$RuleEntry\l+  type : RuleContainer$RuleEntry\l+  order : RuleContainer$RuleEntry\l+  TYPE_TEST_RULE : RuleContainer$RuleEntry\l+  TYPE_METHOD_RULE : RuleContainer$RuleEntry\l|+  init() : void\l}"]
BadlyFormedClassesTest[label="{BadlyFormedClassesTest||+  init() : void\l+  constructorException() : void\l+  noRunnableMethods() : void\l+  badBeforeMethodWithLegacyRunner() : void\l+  exceptionMessageFrom() : String\l}"]
InvalidTestClassErrorTest[label="{InvalidTestClassErrorTest||+  init() : void\l+  invalidTestClassErrorShouldListAllValidationErrorsInItsMessage() : void\l}"]
AllValidatorTests[label="{AllValidatorTests||+  init() : void\l}"]
Stub[label="{Stub||}"]
ErrorReportingRunnerTest[label="{ErrorReportingRunnerTest||+  init() : void\l+  cannotCreateWithNullClass() : void\l+  cannotCreateWithNullClass2() : void\l+  cannotCreateWithNullClasses() : void\l+  cannotCreateWithoutClass() : void\l+  givenInvalidTestClassErrorAsCause() : void\l+  givenInvalidTestClass_integrationTest() : void\l}"]
StringableObject[label="{StringableObject|+  obj : StringableObject\l|+  init() : void\l+  stringableObject() : Object\l+  isListableArray() : Z\l+  toString() : String\l}"]
UserStopTest[label="{UserStopTest|+  fNotifier : UserStopTest\l|+  init() : void\l+  createNotifier() : void\l+  userStop() : void\l+  stopClassRunner() : void\l}"]
StoppedByUserException[label="{StoppedByUserException|+  backtrace : Throwable\l+  detailMessage : Throwable\l+  cause : Throwable\l+  stackTrace : Throwable\l+  suppressedExceptions : Throwable\l+  serialVersionUID : Throwable\l+  UNASSIGNED_STACK : Throwable\l+  SUPPRESSED_SENTINEL : Throwable\l+  NULL_CAUSE_MESSAGE : Throwable\l+  SELF_SUPPRESSION_MESSAGE : Throwable\l+  CAUSE_CAPTION : Throwable\l+  SUPPRESSED_CAPTION : Throwable\l+  EMPTY_THROWABLE_ARRAY : Throwable\l+  $assertionsDisabled : Throwable\l|+  init() : void\l}"]
TimeoutRuleTest[label="{TimeoutRuleTest|+  run1Lock : TimeoutRuleTest\l+  run4done : TimeoutRuleTest\l|+  init() : void\l+  before() : void\l+  after() : void\l+  timeUnitTimeout() : void\l+  longTimeout() : void\l+  nullTimeUnit() : void\l+  access000() : ReentrantLock\l+  access100() : Z\l+  clinit() : void\l}"]
StacktracePrintingMatcherTest[label="{StacktracePrintingMatcherTest||+  init() : void\l+  succeedsWhenInnerMatcherSucceeds() : void\l+  failsWhenInnerMatcherFails() : void\l+  assertThatIncludesStacktrace() : void\l}"]
UserStopTestXXX[label="{UserStopTestXXX||+  init() : void\l+  foo() : void\l}"]
CouldNotReadCoreException[label="{CouldNotReadCoreException|+  backtrace : Throwable\l+  detailMessage : Throwable\l+  cause : Throwable\l+  stackTrace : Throwable\l+  suppressedExceptions : Throwable\l+  serialVersionUID : Throwable\l+  UNASSIGNED_STACK : Throwable\l+  SUPPRESSED_SENTINEL : Throwable\l+  NULL_CAUSE_MESSAGE : Throwable\l+  SELF_SUPPRESSION_MESSAGE : Throwable\l+  CAUSE_CAPTION : Throwable\l+  SUPPRESSED_CAPTION : Throwable\l+  EMPTY_THROWABLE_ARRAY : Throwable\l+  $assertionsDisabled : Throwable\l|+  init() : void\l}"]
AllTestsTest[label="{AllTestsTest|+  run : AllTestsTest\l|+  init() : void\l+  ensureTestIsRun() : void\l+  correctTestCount() : void\l+  someUsefulDescription() : void\l+  correctTestCountAdapted() : void\l+  exceptionThrownWhenSuiteIsBad() : void\l+  access002() : Z\l}"]
FailedBefore[label="{FailedBefore|+  backtrace : Throwable\l+  detailMessage : Throwable\l+  cause : Throwable\l+  stackTrace : Throwable\l+  suppressedExceptions : Throwable\l+  serialVersionUID : Throwable\l+  UNASSIGNED_STACK : Throwable\l+  SUPPRESSED_SENTINEL : Throwable\l+  NULL_CAUSE_MESSAGE : Throwable\l+  SELF_SUPPRESSION_MESSAGE : Throwable\l+  CAUSE_CAPTION : Throwable\l+  SUPPRESSED_CAPTION : Throwable\l+  EMPTY_THROWABLE_ARRAY : Throwable\l+  $assertionsDisabled : Throwable\l|+  init() : void\l}"]
Theory[label="{Theory||+  nullsAccepted() : Z\l}"]
JUnitCoreTest[label="{JUnitCoreTest||+  init() : void\l+  shouldAddFailuresToResult() : void\l}"]
Before[label="{Before||}"]
RuleContainerTest[label="{RuleContainerTest|+  container : RuleContainerTest\l|+  init() : void\l+  methodRulesOnly() : void\l+  testRuleAroundMethodRule() : void\l+  ordering1() : void\l+  ordering2() : void\l}"]
MultipleFailureExceptionTestXXX[label="{MultipleFailureExceptionTestXXX|+  backtrace : Throwable\l+  detailMessage : Throwable\l+  cause : Throwable\l+  stackTrace : Throwable\l+  suppressedExceptions : Throwable\l+  serialVersionUID : Throwable\l+  UNASSIGNED_STACK : Throwable\l+  SUPPRESSED_SENTINEL : Throwable\l+  NULL_CAUSE_MESSAGE : Throwable\l+  SELF_SUPPRESSION_MESSAGE : Throwable\l+  CAUSE_CAPTION : Throwable\l+  SUPPRESSED_CAPTION : Throwable\l+  EMPTY_THROWABLE_ARRAY : Throwable\l+  $assertionsDisabled : Throwable\l|+  init() : void\l}"]
AssumptionTest[label="{AssumptionTest|+  assumptionFailures : AssumptionTest\l+  message : AssumptionTest\l+  e : AssumptionTest\l|+  init() : void\l+  failedAssumptionsMeanPassing() : void\l+  failedAssumptionsCanBeDetectedByListeners() : void\l+  passingAssumptionsScootThrough() : void\l+  assumeThatWorks() : void\l+  assumeThatPasses() : void\l+  assumeThatPassesOnStrings() : void\l+  assumeNotNullThrowsException() : void\l+  assumeNotNullThrowsExceptionForNullArray() : void\l+  assumeNotNullPasses() : void\l+  assumeNotNullIncludesParameterList() : void\l+  assumeNoExceptionThrows() : void\l+  assertCompletesNormally() : void\l+  assumeTrueWorks() : void\l+  failingAssumptionInBeforePreventsTestRun() : void\l+  failingAssumptionInBeforeClassIgnoresClass() : void\l+  failingAssumptionInConstructorIgnoresClass() : void\l+  assumeWithExpectedException() : void\l+  assumptionsWithMessage() : void\l+  assumptionsWithMessageAndCause() : void\l+  failedAssumptionsWithMessage() : void\l+  runAndGetAssumptionFailures() : List\l+  access008() : I\l+  clinit() : void\l}"]
TemporaryFolderUsageTest[label="{TemporaryFolderUsageTest|+  tempFolder : TemporaryFolderUsageTest\l+  thrown : TemporaryFolderUsageTest\l|+  init() : void\l+  setUp() : void\l+  tearDown() : void\l+  getRootShouldThrowIllegalStateExceptionIfCreateWasNotInvoked() : void\l+  newFileThrowsIllegalStateExceptionIfCreateWasNotInvoked() : void\l+  newFileWithGivenNameThrowsIllegalStateExceptionIfCreateWasNotInvoked() : void\l+  newFileWithGivenFilenameThrowsIOExceptionIfFileExists() : void\l+  newFolderThrowsIllegalStateExceptionIfCreateWasNotInvoked() : void\l+  newFolderWithGivenPathThrowsIllegalStateExceptionIfCreateWasNotInvoked() : void\l+  newFolderWithGivenFolderThrowsIOExceptionIfFolderExists() : void\l+  newFolderWithGivenFolderThrowsIOExceptionIfFileExists() : void\l+  newFolderWithPathStartingWithFileSeparatorThrowsIOException() : void\l+  newFolderWithPathContainingFileSeparaterCreatesDirectories() : void\l+  newFolderWithPathContainingForwardSlashCreatesDirectories() : void\l+  newFolderWithGivenPathThrowsIOExceptionIfFolderExists() : void\l+  newFolderWithGivenEmptyArrayThrowsIllegalArgumentException() : void\l+  newFolderWithPathsContainingForwardSlashCreatesFullPath() : void\l+  newFolderWithPathsContainingFileSeparatorCreatesFullPath() : void\l+  createInitializesRootFolder() : void\l+  deleteShouldDoNothingIfRootFolderWasNotInitialized() : void\l+  deleteRemovesRootFolder() : void\l+  newRandomFileIsCreatedUnderRootFolder() : void\l+  newNamedFileIsCreatedUnderRootFolder() : void\l+  newRandomFolderIsCreatedUnderRootFolder() : void\l+  newNestedFoldersCreatedUnderRootFolder() : void\l+  canSetTheBaseFileForATemporaryFolder() : void\l+  createTemporaryFolder() : File\l+  assertFileDoesNotExist() : void\l+  checkFileExists() : void\l+  checkFileIsDirectory() : void\l+  assertFileExists() : void\l+  assertFileIsDirectory() : void\l+  assertFileCreatedUnderRootFolder() : void\l+  assertParentFolderForFileIs() : void\l}"]
JUnit4ClassRunnerTest[label="{JUnit4ClassRunnerTest||+  init() : void\l+  runWithOldJUnit4ClassRunner() : void\l+  runWithOldJUnit4ClassRunnerAndBadConstructor() : void\l}"]
ParameterizedTestMethodTest[label="{ParameterizedTestMethodTest|+  fClass : ParameterizedTestMethodTest\l+  fErrorCount : ParameterizedTestMethodTest\l|+  init() : void\l+  params() : Collection\l+  validateAllMethods() : List\l+  testFailures() : void\l+  suite() : Test\l}"]
IgnoreClassTest[label="{IgnoreClassTest||+  init() : void\l+  ignoreClass() : void\l}"]
ClassRequestTestXXX[label="{ClassRequestTestXXX||+  init() : void\l+  suite() : Test\l}"]
TheoriesPerformanceTestXXX[label="{TheoriesPerformanceTestXXX|+  ints : TheoriesPerformanceTest$UpToTen\l|+  init() : void\l+  threeInts() : void\l+  clinit() : void\l}"]
AllListeningTests[label="{AllListeningTests||+  init() : void\l}"]
AllTheoriesTests[label="{AllTheoriesTests||+  init() : void\l}"]
RunWithTest[label="{RunWithTest|+  log : RunWithTest\l|+  init() : void\l+  run() : void\l+  runWithExtendsToSubclasses() : void\l+  characterizeErrorMessageFromBadRunner() : void\l+  access000() : String\l+  access002() : String\l}"]
TypeMatchingBetweenMultiDataPointsMethod[label="{TypeMatchingBetweenMultiDataPointsMethod||+  init() : void\l+  ignoreWrongTypedDataPointsMethod() : void\l+  pickUpMultiPointDataPointMethods() : void\l}"]
ParameterSignature[label="{ParameterSignature|+  type : ParameterSignature\l+  annotations : ParameterSignature\l+  CONVERTABLE_TYPES_MAP : ParameterSignature\l|+  buildConvertableTypesMap() : Map\l+  putSymmetrically() : void\l+  signatures() : ArrayList\l+  init() : void\l+  canAcceptValue() : Z\l+  canAcceptType() : Z\l+  canPotentiallyAcceptType() : Z\l+  isAssignableViaTypeConversion() : Z\l+  getType() : Class\l+  getAnnotations() : List\l+  hasAnnotation() : Z\l+  findDeepAnnotation() : Annotation\l+  getAnnotation() : Annotation\l+  clinit() : void\l}"]
SorterXXX[label="{SorterXXX||+  init() : void\l+  compare() : I\l}"]
AllExperimentalTests[label="{AllExperimentalTests||+  init() : void\l}"]
TestWithParametersTestXXX[label="{TestWithParametersTestXXX||+  init() : void\l}"]
SuccessfulWithDataPointFields[label="{SuccessfulWithDataPointFields||+  init() : void\l}"]
JavadocTest[label="{JavadocTest||+  init() : void\l+  slowTests() : void\l+  fastSmokeTests() : void\l}"]
RunWith[label="{RunWith||+  value() : Class\l}"]
FailOnTimeoutTest[label="{FailOnTimeoutTest|+  thrown : FailOnTimeoutTest\l+  statement : FailOnTimeoutTest\l+  failOnTimeout : FailOnTimeoutTest\l+  TIMEOUT : FailOnTimeoutTest\l+  DURATION_THAT_EXCEEDS_TIMEOUT : FailOnTimeoutTest\l|+  init() : void\l+  throwsTestTimedOutException() : void\l+  throwExceptionWithNiceMessageOnTimeout() : void\l+  sendUpExceptionThrownByStatement() : void\l+  throwExceptionIfTheSecondCallToEvaluateNeedsTooMuchTime() : void\l+  throwTimeoutExceptionOnSecondCallAlthoughFirstCallThrowsException() : void\l+  throwsExceptionWithTimeoutValueAndTimeUnitSet() : void\l+  evaluateWithException() : void\l+  evaluateWithWaitDuration() : void\l+  stopEndlessStatement() : void\l+  stackTraceContainsRealCauseOfTimeout() : void\l}"]
AllClassesTests[label="{AllClassesTests||+  init() : void\l}"]
MethodRoadie[label="{MethodRoadie|+  this$1 : MethodRoadie$1$1\l|+  init() : void\l+  call() : Object\l}"]
AllResultsTests[label="{AllResultsTests||+  init() : void\l}"]
FilterFactories[label="{FilterFactories||+  init() : void\l+  createFilterFromFilterSpec() : Filter\l+  createFilter() : Filter\l+  createFilterFactory() : FilterFactory\l}"]
FilterFactoryXXX[label="{FilterFactoryXXX|+  backtrace : Throwable\l+  detailMessage : Throwable\l+  cause : Throwable\l+  stackTrace : Throwable\l+  suppressedExceptions : Throwable\l+  serialVersionUID : Throwable\l+  UNASSIGNED_STACK : Throwable\l+  SUPPRESSED_SENTINEL : Throwable\l+  NULL_CAUSE_MESSAGE : Throwable\l+  SELF_SUPPRESSION_MESSAGE : Throwable\l+  CAUSE_CAPTION : Throwable\l+  SUPPRESSED_CAPTION : Throwable\l+  EMPTY_THROWABLE_ARRAY : Throwable\l+  $assertionsDisabled : Throwable\l|+  init() : void\l}"]
ClassRequestTest[label="{ClassRequestTest||+  init() : void\l+  noSuiteMethodIfMethodPrivate() : void\l}"]
SuiteMethodTest[label="{SuiteMethodTest|+  wasRun : SuiteMethodTest\l|+  init() : void\l+  makeSureSuiteIsCalled() : void\l+  makeSureSuiteWorksWithJUnit4Classes() : void\l+  descriptionAndRunNotificationsAreConsistent() : void\l+  suiteIsUsedWithJUnit4Classes() : void\l+  makeSureSuiteNotUsedWithJUnit4Classes2() : void\l}"]
FilterFactoryParams[label="{FilterFactoryParams|+  topLevelDescription : FilterFactoryParams\l+  args : FilterFactoryParams\l|+  init() : void\l+  getArgs() : String\l+  getTopLevelDescription() : Description\l}"]
CategoryFilterFactoryTest[label="{CategoryFilterFactoryTest|+  expectedException : CategoryFilterFactoryTest\l+  testName : CategoryFilterFactoryTest\l+  categoryFilterFactory : CategoryFilterFactoryTest\l|+  init() : void\l+  shouldCreateFilter() : void\l+  shouldThrowException() : void\l}"]
AllMembersSupplierTest[label="{AllMembersSupplierTest|+  expected : AllMembersSupplierTest\l|+  init() : void\l+  dataPointsArrayShouldBeRecognized() : void\l+  dataPointsArrayShouldBeRecognizedOnValueTypeNotFieldType() : void\l+  dataPointMethodShouldBeRecognizedForOverlyGeneralParameters() : void\l+  dataPointsAnnotationMeansTreatAsArrayOnly() : void\l+  dataPointsArrayFieldMayContainNullValue() : void\l+  dataPointsArrayMethodMayContainNullValue() : void\l+  allMembersFailsOnFailingDataPointsArrayMethod() : void\l+  allMemberValuesFor() : List\l+  dataPointsCollectionFieldsShouldBeRecognized() : void\l+  dataPointsCollectionMethodShouldBeRecognized() : void\l+  dataPointsCollectionShouldBeRecognizedIgnoringStrangeTypes() : void\l}"]
MultiCategoryTest[label="{MultiCategoryTest||+  init() : void\l+  runSuite() : void\l+  inheritanceAnyIncluded() : void\l+  inheritanceAllIncluded() : void\l+  inheritanceAnyAll() : void\l+  inheritanceAllAny() : void\l}"]
AnnotationValidatorFactoryTest[label="{AnnotationValidatorFactoryTest|+  exception : AnnotationValidatorFactoryTest\l|+  init() : void\l+  createAnnotationValidator() : void\l+  exceptionWhenAnnotationValidatorCantBeCreated() : void\l}"]
AllMethodsTests[label="{AllMethodsTests||+  init() : void\l}"]
FrameworkFieldTest[label="{FrameworkFieldTest|+  thrown : FrameworkFieldTest\l|+  init() : void\l+  cannotBeCreatedWithoutUnderlyingField() : void\l+  hasToStringWhichPrintsFieldName() : void\l+  presentAnnotationIsAvailable() : void\l+  missingAnnotationIsNotAvailable() : void\l}"]
ParametersSuppliedBy[label="{ParametersSuppliedBy||+  value() : Class\l}"]
ValidateWith[label="{ValidateWith||+  value() : Class\l}"]
ThrowableCauseMatcherTest[label="{ThrowableCauseMatcherTest||+  init() : void\l+  shouldAllowCauseOfDifferentClassFromRoot() : void\l}"]
SynchronizedRunListenerTest[label="{SynchronizedRunListenerTest||+  init() : void\l+  getAllDeclaredMethods() : Set\l+  overridesAllMethodsInRunListener() : void\l+  namedListenerCorrectlyImplementsEqualsAndHashCode() : void\l+  toStringDelegates() : void\l+  equalsDelegates() : void\l+  hashCodeDelegates() : void\l+  wrap() : SynchronizedRunListener\l}"]
TypeMatchingBetweenMultiDataPointsMethodXXX[label="{TypeMatchingBetweenMultiDataPointsMethodXXX|+  correctlyTyped : TypeMatchingBetweenMultiDataPointsMethod$WithCorrectlyTypedDataPointsMethod\l|+  init() : void\l+  anotherCorrectlyTyped() : String\l+  testTheory() : void\l+  clinit() : void\l}"]
DataPoints[label="{DataPoints||+  value() : String\l+  ignoredExceptions() : Class\l}"]
OldTestClassAdaptingListenerTest[label="{OldTestClassAdaptingListenerTest||+  init() : void\l+  addFailureDelegatesToNotifier() : void\l}"]
ParameterizedNamesTest[label="{ParameterizedNamesTest||+  init() : void\l+  parameterizedTestsWithSpecialCharsInName() : void\l}"]
NameRulesTest[label="{NameRulesTest||+  init() : void\l}"]
TestCouldNotBeSkippedException[label="{TestCouldNotBeSkippedException|+  backtrace : Throwable\l+  detailMessage : Throwable\l+  cause : Throwable\l+  stackTrace : Throwable\l+  suppressedExceptions : Throwable\l+  serialVersionUID : Throwable\l+  UNASSIGNED_STACK : Throwable\l+  SUPPRESSED_SENTINEL : Throwable\l+  NULL_CAUSE_MESSAGE : Throwable\l+  SELF_SUPPRESSION_MESSAGE : Throwable\l+  CAUSE_CAPTION : Throwable\l+  SUPPRESSED_CAPTION : Throwable\l+  EMPTY_THROWABLE_ARRAY : Throwable\l+  $assertionsDisabled : Throwable\l|+  init() : void\l}"]
WithNamedDataPoints[label="{WithNamedDataPoints||+  init() : void\l+  onlyUseSpecificDataPointsIfSpecified() : void\l}"]
CommandLineTest[label="{CommandLineTest|+  results : CommandLineTest\l+  oldOut : CommandLineTest\l+  testWasRun : CommandLineTest\l+  fCount : CommandLineTest\l|+  init() : void\l+  before() : void\l+  after() : void\l+  runATest() : void\l+  runAClass() : void\l+  runTwoClassesAsArray() : void\l+  runTwoClasses() : void\l+  access002() : Z\l+  access108() : I\l}"]
ComparisonCriteriaXXX[label="{ComparisonCriteriaXXX|+  val$string : ComparisonCriteria$1\l|+  init() : void\l+  toString() : String\l}"]
AnnotatedDescriptionTest[label="{AnnotatedDescriptionTest||+  init() : void\l+  annotationsExistOnDescriptionsOfClasses() : void\l+  getAnnotationsReturnsAllAnnotations() : void\l+  annotationsExistOnDescriptionsOfIgnoredClass() : void\l+  descriptionOfTestClassHasValuedAnnotation() : void\l+  childlessCopyOfDescriptionStillHasAnnotations() : void\l+  characterizeCreatingMyOwnAnnotation() : void\l+  describe() : Description\l}"]
TempFolderRuleTest[label="{TempFolderRuleTest|+  createdFiles : TempFolderRuleTest\l+  GET_ROOT_DUMMY : TempFolderRuleTest\l+  NEW_FILE_DUMMY : TempFolderRuleTest\l+  NEW_FOLDER_DUMMY : TempFolderRuleTest\l|+  init() : void\l+  tempFolderIsDeleted() : void\l+  subFolderIsDeleted() : void\l+  randomSubFoldersAreDeleted() : void\l+  randomFilesAreDeleted() : void\l+  recursiveDeleteFolderWithOneElement() : void\l+  recursiveDeleteFolderWithOneRandomElement() : void\l+  recursiveDeleteFolderWithZeroElements() : void\l+  nameClashesResultInTestFailures() : void\l+  incorrectUsageWithoutApplyingTheRuleShouldNotPolluteTheCurrentWorkingDirectory() : void\l+  cleanCurrentWorkingDirectory() : void\l+  access000() : File\l+  clinit() : void\l}"]
OldTests[label="{OldTests||+  init() : void\l+  suite() : Test\l}"]
DescriptionTest[label="{DescriptionTest||+  init() : void\l+  parseClass_whenCantParse() : void\l+  parseMethod_whenCantParse() : void\l+  createSuiteDescription_whenZeroLength() : void\l+  createSuiteDescription_whenNull() : void\l+  parseClassAndMethodNoAnnotations() : void\l+  parseClassAndMethodWithAnnotations() : void\l+  parseClassNameAndMethodUniqueId() : void\l+  sameNamesButDifferentUniqueIdAreNotEqual() : void\l+  usesPassedInClassObject() : void\l}"]
ClassRule[label="{ClassRule||+  order() : I\l}"]
JUnit38SortingTest[label="{JUnit38SortingTest|+  fMax : JUnit38SortingTest\l+  fMaxFile : JUnit38SortingTest\l|+  init() : void\l+  createMax() : void\l+  forgetMax() : void\l+  preferRecentlyFailed38Test() : void\l}"]
MethodSorterTest[label="{MethodSorterTest|+  ALPHA : MethodSorterTest\l+  BETA : MethodSorterTest\l+  GAMMA_VOID : MethodSorterTest\l+  GAMMA_BOOLEAN : MethodSorterTest\l+  DELTA : MethodSorterTest\l+  EPSILON : MethodSorterTest\l+  SUPER_METHOD : MethodSorterTest\l+  SUB_METHOD : MethodSorterTest\l|+  init() : void\l+  getDeclaredMethodNames() : List\l+  testMethodsNullSorterSelf() : void\l+  testMethodsNullSorterSuper() : void\l+  testMethodsNullSorterSub() : void\l+  testDefaultMethodSorter() : void\l+  testJvmMethodSorter() : void\l+  testAscendingMethodSorter() : void\l}"]
MethodSorters[label="{MethodSorters|+  comparator : MethodSorters\l+  name : Enum\l+  ordinal : Enum\l+  NAME_ASCENDING : MethodSorters\l+  JVM : MethodSorters\l+  DEFAULT : MethodSorters\l+  $VALUES : MethodSorters\l|+  values() : MethodSorters\l+  valueOf() : MethodSorters\l+  init() : void\l+  getComparator() : Comparator\l+  clinit() : void\l}"]
IgnoreClassTestXXX[label="{IgnoreClassTestXXX||+  init() : void\l+  iFail() : void\l+  iFailToo() : void\l}"]
ActiveTestSuiteXXX[label="{ActiveTestSuiteXXX|+  val$test : ActiveTestSuite$1\l+  val$result : ActiveTestSuite$1\l+  this$0 : ActiveTestSuite$1\l+  name : Thread\l+  priority : Thread\l+  threadQ : Thread\l+  eetop : Thread\l+  single_step : Thread\l+  daemon : Thread\l+  stillborn : Thread\l+  target : Thread\l+  group : Thread\l+  contextClassLoader : Thread\l+  inheritedAccessControlContext : Thread\l+  threadLocals : Thread\l+  inheritableThreadLocals : Thread\l+  stackSize : Thread\l+  nativeParkEventPointer : Thread\l+  tid : Thread\l+  threadStatus : Thread\l+  parkBlocker : Thread\l+  blocker : Thread\l+  blockerLock : Thread\l+  uncaughtExceptionHandler : Thread\l+  threadLocalRandomSeed : Thread\l+  threadLocalRandomProbe : Thread\l+  threadLocalRandomSecondarySeed : Thread\l+  threadInitNumber : Thread\l+  threadSeqNumber : Thread\l+  MIN_PRIORITY : Thread\l+  NORM_PRIORITY : Thread\l+  MAX_PRIORITY : Thread\l+  EMPTY_STACK_TRACE : Thread\l+  SUBCLASS_IMPLEMENTATION_PERMISSION : Thread\l+  defaultUncaughtExceptionHandler : Thread\l|+  init() : void\l+  run() : void\l}"]
edge [arrowhead = "empty"]
TimeoutRuleTestXXX->TimeoutRuleTestXXX
SuiteTestXXX->SuiteTestXXX
MultiCategoryTestXXX->MultiCategoryTestXXX
CategoryTestXXX->CategoryTestXXX
InheritedTestTestXXX->InheritedTestTestXXX
AnnotationsValidatorXXX->AnnotationsValidatorXXX
MultipleFailureException->MultipleFailureException
MethodSorterTestXXX->MethodSorterTestXXX
TestMethodTestXXX->TestMethodTestXXX
RunNotifierXXX->RunNotifierXXX
StopwatchTestXXX->StopwatchTestXXX
TestClassTestXXX->TestClassTestXXX
ParameterizedTestMethodTestXXX->ParameterizedTestMethodTestXXX
RuleMemberValidatorXXX->RuleMemberValidatorXXX
edge [arrowhead = "normal"]
ClassRoadie->ClassRoadie
EachTestNotifier->EachTestNotifier
BlockJUnit4ClassRunnerWithParametersTest->BlockJUnit4ClassRunnerWithParametersTest
Assignments->Assignments
TestFailure->TestFailure
TestWithParameters->TestWithParameters
RuleChainTest->RuleChainTest
MultipleFailureException->MultipleFailureException
ArrayComparisonFailure->ArrayComparisonFailure
ArrayComparisonFailureTest->ArrayComparisonFailureTest
ParameterSignatureTest->ParameterSignatureTest
ParameterizedTestTest->ParameterizedTestTest
TestMethod->TestMethod
InitializationErrorForwardCompatibilityTest->InitializationErrorForwardCompatibilityTest
SuiteDescriptionTest->SuiteDescriptionTest
MaxHistory->MaxHistory
PrintableResultTest->PrintableResultTest
WithParameterSupplier->WithParameterSupplier
ParallelMethodTest->ParallelMethodTest
TestDescriptionMethodNameTest->TestDescriptionMethodNameTest
PrintableResult->PrintableResult
JUnitCommandLineParseResultTest->JUnitCommandLineParseResultTest
ListenerTest->ListenerTest
JUnit4TestAdapterCache->JUnit4TestAdapterCache
ObjectContractTest->ObjectContractTest
FrameworkMethodTest->FrameworkMethodTest
FailureList->FailureList
RuleContainer->RuleContainer
MaxStarterTest->MaxStarterTest
ParameterizedAssertionErrorTest->ParameterizedAssertionErrorTest
ParentRunnerTest->ParentRunnerTest
MethodCall->MethodCall
RuleMemberValidator->RuleMemberValidator
RunnerTest->RunnerTest
TestResult->TestResult
JUnit38ClassRunnerTest->JUnit38ClassRunnerTest
FilterFactoriesTest->FilterFactoriesTest
NoGenericTypeParametersValidator->NoGenericTypeParametersValidator
TestWithParametersTest->TestWithParametersTest
ComparisonCompactor->ComparisonCompactor
Description->Description
MethodValidator->MethodValidator
MatcherTest->MatcherTest
AssertionTest->AssertionTest
AnnotationValidatorFactory->AnnotationValidatorFactory
TheoriesPerformanceTest->TheoriesPerformanceTest
RunNotifierTest->RunNotifierTest
ExpectedExceptionTest->ExpectedExceptionTest
ParallelClassTest->ParallelClassTest
FilterOptionIntegrationTest->FilterOptionIntegrationTest
PublicClassValidatorTest->PublicClassValidatorTest
ClassLevelMethodsWithIgnoredTestsTest->ClassLevelMethodsWithIgnoredTestsTest
ConcurrentRunNotifierTest->ConcurrentRunNotifierTest
ExpectedExceptionMatcherBuilder->ExpectedExceptionMatcherBuilder
SingleMethodTest->SingleMethodTest
ParentRunnerClassLoaderTest->ParentRunnerClassLoaderTest
TestRunListener->TestRunListener
SystemExitTest->SystemExitTest
TestTimedOutException->TestTimedOutException
WhenNoParametersMatch->WhenNoParametersMatch
Rule->Rule
MultipleFailureExceptionTest->MultipleFailureExceptionTest
GuesserQueue->GuesserQueue
MethodSorter->MethodSorter
JUnitCommandLineParseResult->JUnitCommandLineParseResult
StackTracesTest->StackTracesTest
AssumptionViolatedExceptionTest->AssumptionViolatedExceptionTest
JUnitCore->JUnitCore
Sorter->Sorter
StringableObject->StringableObject
UserStopTest->UserStopTest
TimeoutRuleTest->TimeoutRuleTest
AllTestsTest->AllTestsTest
RuleContainerTest->RuleContainerTest
AssumptionTest->AssumptionTest
TemporaryFolderUsageTest->TemporaryFolderUsageTest
ParameterizedTestMethodTest->ParameterizedTestMethodTest
RunWithTest->RunWithTest
ParameterSignature->ParameterSignature
FailOnTimeoutTest->FailOnTimeoutTest
SuiteMethodTest->SuiteMethodTest
FilterFactoryParams->FilterFactoryParams
CategoryFilterFactoryTest->CategoryFilterFactoryTest
AllMembersSupplierTest->AllMembersSupplierTest
AnnotationValidatorFactoryTest->AnnotationValidatorFactoryTest
FrameworkFieldTest->FrameworkFieldTest
CommandLineTest->CommandLineTest
TempFolderRuleTest->TempFolderRuleTest
JUnit38SortingTest->JUnit38SortingTest
MethodSorterTest->MethodSorterTest
MethodSorters->MethodSorters
}

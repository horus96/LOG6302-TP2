<?xml version="1.0" encoding="UTF-8"?><project>
  <function name="&lt; Application, Lmain, main([Ljava/lang/String;)V &gt;">
    <parameter id="1"/>
    <constant id="3" value="Wala permet la représentation du code dans une représentation intermédiaire, comprenant un CFG intra-procédural ainsi que les dernières instructions SSA de chaque bloc. Wala a également des interfaces permettant d'extraire d'autres graphes, tels que des CFG étendus ou des CFG inter-procéduraux. Il est ensuite possible de parcourir ces graphes afin de récolter des informations dans chaque noeud.&#10;Pour l'analyse PTFA, nous avons besoin de connaitre les instructions affectant la sécurité, et donc de chaque instruction SSA. Pour cela, il parait plus pertinent d'utiliser un graphe étendu, c'est à dire avec un bloc pour chaque instruction. Ensuite, nous devrons considérer plusieurs contextes d'appels des méthodes lors de l'analyse. Nous devons donc extraire un graphe inter-procédural et étendu."/>
    <bloc name="ExplodedBlock[0](entry:&lt; Application, Lmain, main([Ljava/lang/String;)V &gt;)">
      <edge target="ExplodedBlock[1](original:BB[SSA:0..2]1 - main.main([Ljava/lang/String;)V)"/>
    </bloc>
    <bloc name="ExplodedBlock[9](exit:&lt; Application, Lmain, main([Ljava/lang/String;)V &gt;)">
      <edge target="ExplodedBlock[7](exit:synthetic &lt; Primordial, Lcom/ibm/wala/FakeRootClass, fakeRootMethod()V &gt;)"/>
    </bloc>
  </function>
  <function name="&lt; Application, Lmain, main([Ljava/lang/String;)V &gt;">
    <parameter id="1"/>
    <constant id="3" value="Wala permet la représentation du code dans une représentation intermédiaire, comprenant un CFG intra-procédural ainsi que les dernières instructions SSA de chaque bloc. Wala a également des interfaces permettant d'extraire d'autres graphes, tels que des CFG étendus ou des CFG inter-procéduraux. Il est ensuite possible de parcourir ces graphes afin de récolter des informations dans chaque noeud.&#10;Pour l'analyse PTFA, nous avons besoin de connaitre les instructions affectant la sécurité, et donc de chaque instruction SSA. Pour cela, il parait plus pertinent d'utiliser un graphe étendu, c'est à dire avec un bloc pour chaque instruction. Ensuite, nous devrons considérer plusieurs contextes d'appels des méthodes lors de l'analyse. Nous devons donc extraire un graphe inter-procédural et étendu."/>
    <bloc name="ExplodedBlock[1](original:BB[SSA:0..2]1 - main.main([Ljava/lang/String;)V)">
      <edge target="ExplodedBlock[2](original:BB[SSA:0..2]1 - main.main([Ljava/lang/String;)V)"/>
    </bloc>
    <bloc name="ExplodedBlock[2](original:BB[SSA:0..2]1 - main.main([Ljava/lang/String;)V)">
      <edge target="ExplodedBlock[3](original:BB[SSA:0..2]1 - main.main([Ljava/lang/String;)V)"/>
    </bloc>
    <bloc name="ExplodedBlock[3](original:BB[SSA:0..2]1 - main.main([Ljava/lang/String;)V)">
      <edge target="ExplodedBlock[9](exit:&lt; Application, Lmain, main([Ljava/lang/String;)V &gt;)"/>
      <edge target="ExplodedBlock[4](original:BB[SSA:3..4]2 - main.main([Ljava/lang/String;)V)"/>
      <ssa instruction="4 = new &lt;Application,Lmain&gt;@3">
        <def id="4"/>
      </ssa>
    </bloc>
    <bloc name="ExplodedBlock[4](original:BB[SSA:3..4]2 - main.main([Ljava/lang/String;)V)">
      <edge target="ExplodedBlock[5](original:BB[SSA:3..4]2 - main.main([Ljava/lang/String;)V)"/>
    </bloc>
    <bloc name="ExplodedBlock[5](original:BB[SSA:3..4]2 - main.main([Ljava/lang/String;)V)">
      <edge target="ExplodedBlock[9](exit:&lt; Application, Lmain, main([Ljava/lang/String;)V &gt;)"/>
      <edge target="ExplodedBlock[6](original:BB[SSA:5..5]3 - main.main([Ljava/lang/String;)V)"/>
      <edge target="ExplodedBlock[0](entry:&lt; Application, Lmain, &lt;init&gt;()V &gt;)"/>
      <ssa instruction="invokespecial &lt; Application, Lmain, &lt;init&gt;()V &gt; 4 @7 exception:5">
        <def id="5"/>
        <use id="4">
          <ref instr="4 = new &lt;Application,Lmain&gt;@3"/>
        </use>
      </ssa>
    </bloc>
    <bloc name="ExplodedBlock[6](original:BB[SSA:5..5]3 - main.main([Ljava/lang/String;)V)">
      <edge target="ExplodedBlock[9](exit:&lt; Application, Lmain, main([Ljava/lang/String;)V &gt;)"/>
      <edge target="ExplodedBlock[7](original:BB[SSA:6..7]4 - main.main([Ljava/lang/String;)V)"/>
      <edge target="ExplodedBlock[0](entry:&lt; Application, Lmain, wordcount()[I &gt;)"/>
      <ssa instruction="7 = invokevirtual &lt; Application, Lmain, wordcount()[I &gt; 4 @10 exception:6">
        <def id="7"/>
        <def id="6"/>
        <use id="4">
          <ref instr="4 = new &lt;Application,Lmain&gt;@3"/>
        </use>
      </ssa>
    </bloc>
    <bloc name="ExplodedBlock[7](original:BB[SSA:6..7]4 - main.main([Ljava/lang/String;)V)">
      <edge target="ExplodedBlock[8](original:BB[SSA:6..7]4 - main.main([Ljava/lang/String;)V)"/>
    </bloc>
    <bloc name="ExplodedBlock[8](original:BB[SSA:6..7]4 - main.main([Ljava/lang/String;)V)">
      <edge target="ExplodedBlock[9](exit:&lt; Application, Lmain, main([Ljava/lang/String;)V &gt;)"/>
      <ssa instruction="return"/>
    </bloc>
  </function>
  <function name="&lt; Application, Lmain, &lt;init&gt;()V &gt;">
    <parameter id="1"/>
    <constant id="4" value="1"/>
    <constant id="5" value="0"/>
    <bloc name="ExplodedBlock[0](entry:&lt; Application, Lmain, &lt;init&gt;()V &gt;)">
      <edge target="ExplodedBlock[1](original:BB[SSA:0..1]1 - main.&lt;init&gt;()V)"/>
    </bloc>
    <bloc name="ExplodedBlock[16](exit:&lt; Application, Lmain, &lt;init&gt;()V &gt;)">
      <edge target="ExplodedBlock[9](exit:&lt; Application, Lmain, main([Ljava/lang/String;)V &gt;)"/>
      <edge target="ExplodedBlock[6](original:BB[SSA:5..5]3 - main.main([Ljava/lang/String;)V)"/>
    </bloc>
  </function>
  <function name="&lt; Application, Lmain, wordcount()[I &gt;">
    <parameter id="1"/>
    <constant id="3" value="1"/>
    <constant id="4" value="0"/>
    <constant id="16" value="10"/>
    <constant id="21" value="9"/>
    <constant id="23" value="32"/>
    <constant id="29" value="3"/>
    <constant id="36" value="2"/>
    <bloc name="ExplodedBlock[0](entry:&lt; Application, Lmain, wordcount()[I &gt;)">
      <edge target="ExplodedBlock[1](original:BB[SSA:0..2]1 - main.wordcount()[I)"/>
    </bloc>
    <bloc name="ExplodedBlock[103](exit:&lt; Application, Lmain, wordcount()[I &gt;)">
      <edge target="ExplodedBlock[9](exit:&lt; Application, Lmain, main([Ljava/lang/String;)V &gt;)"/>
      <edge target="ExplodedBlock[7](original:BB[SSA:6..7]4 - main.main([Ljava/lang/String;)V)"/>
    </bloc>
  </function>
  <function name="&lt; Application, Lmain, &lt;init&gt;()V &gt;">
    <parameter id="1"/>
    <constant id="4" value="1"/>
    <constant id="5" value="0"/>
    <bloc name="ExplodedBlock[1](original:BB[SSA:0..1]1 - main.&lt;init&gt;()V)">
      <edge target="ExplodedBlock[2](original:BB[SSA:0..1]1 - main.&lt;init&gt;()V)"/>
    </bloc>
    <bloc name="ExplodedBlock[2](original:BB[SSA:0..1]1 - main.&lt;init&gt;()V)">
      <edge target="ExplodedBlock[0](entry:&lt; Primordial, Ljava/lang/Object, &lt;init&gt;()V &gt;)"/>
      <edge target="ExplodedBlock[16](exit:&lt; Application, Lmain, &lt;init&gt;()V &gt;)"/>
      <edge target="ExplodedBlock[3](original:BB[SSA:2..4]2 - main.&lt;init&gt;()V)"/>
      <ssa instruction="invokespecial &lt; Application, Ljava/lang/Object, &lt;init&gt;()V &gt; 1 @1 exception:3">
        <def id="3"/>
        <use id="1"/>
      </ssa>
    </bloc>
    <bloc name="ExplodedBlock[3](original:BB[SSA:2..4]2 - main.&lt;init&gt;()V)">
      <edge target="ExplodedBlock[4](original:BB[SSA:2..4]2 - main.&lt;init&gt;()V)"/>
    </bloc>
    <bloc name="ExplodedBlock[4](original:BB[SSA:2..4]2 - main.&lt;init&gt;()V)">
      <edge target="ExplodedBlock[5](original:BB[SSA:2..4]2 - main.&lt;init&gt;()V)"/>
    </bloc>
    <bloc name="ExplodedBlock[5](original:BB[SSA:2..4]2 - main.&lt;init&gt;()V)">
      <edge target="ExplodedBlock[16](exit:&lt; Application, Lmain, &lt;init&gt;()V &gt;)"/>
      <edge target="ExplodedBlock[6](original:BB[SSA:5..7]3 - main.&lt;init&gt;()V)"/>
      <ssa instruction="putfield 1.&lt; Application, Lmain, nl, &lt;Primordial,I&gt; &gt; = 4">
        <use id="1"/>
        <use id="4"/>
      </ssa>
    </bloc>
    <bloc name="ExplodedBlock[6](original:BB[SSA:5..7]3 - main.&lt;init&gt;()V)">
      <edge target="ExplodedBlock[7](original:BB[SSA:5..7]3 - main.&lt;init&gt;()V)"/>
    </bloc>
    <bloc name="ExplodedBlock[7](original:BB[SSA:5..7]3 - main.&lt;init&gt;()V)">
      <edge target="ExplodedBlock[8](original:BB[SSA:5..7]3 - main.&lt;init&gt;()V)"/>
    </bloc>
    <bloc name="ExplodedBlock[8](original:BB[SSA:5..7]3 - main.&lt;init&gt;()V)">
      <edge target="ExplodedBlock[16](exit:&lt; Application, Lmain, &lt;init&gt;()V &gt;)"/>
      <edge target="ExplodedBlock[9](original:BB[SSA:8..10]4 - main.&lt;init&gt;()V)"/>
      <ssa instruction="putfield 1.&lt; Application, Lmain, nw, &lt;Primordial,I&gt; &gt; = 4">
        <use id="1"/>
        <use id="4"/>
      </ssa>
    </bloc>
    <bloc name="ExplodedBlock[9](original:BB[SSA:8..10]4 - main.&lt;init&gt;()V)">
      <edge target="ExplodedBlock[10](original:BB[SSA:8..10]4 - main.&lt;init&gt;()V)"/>
    </bloc>
    <bloc name="ExplodedBlock[10](original:BB[SSA:8..10]4 - main.&lt;init&gt;()V)">
      <edge target="ExplodedBlock[11](original:BB[SSA:8..10]4 - main.&lt;init&gt;()V)"/>
    </bloc>
    <bloc name="ExplodedBlock[11](original:BB[SSA:8..10]4 - main.&lt;init&gt;()V)">
      <edge target="ExplodedBlock[16](exit:&lt; Application, Lmain, &lt;init&gt;()V &gt;)"/>
      <edge target="ExplodedBlock[12](original:BB[SSA:11..13]5 - main.&lt;init&gt;()V)"/>
      <ssa instruction="putfield 1.&lt; Application, Lmain, nc, &lt;Primordial,I&gt; &gt; = 4">
        <use id="1"/>
        <use id="4"/>
      </ssa>
    </bloc>
    <bloc name="ExplodedBlock[12](original:BB[SSA:11..13]5 - main.&lt;init&gt;()V)">
      <edge target="ExplodedBlock[13](original:BB[SSA:11..13]5 - main.&lt;init&gt;()V)"/>
    </bloc>
    <bloc name="ExplodedBlock[13](original:BB[SSA:11..13]5 - main.&lt;init&gt;()V)">
      <edge target="ExplodedBlock[14](original:BB[SSA:11..13]5 - main.&lt;init&gt;()V)"/>
    </bloc>
    <bloc name="ExplodedBlock[14](original:BB[SSA:11..13]5 - main.&lt;init&gt;()V)">
      <edge target="ExplodedBlock[16](exit:&lt; Application, Lmain, &lt;init&gt;()V &gt;)"/>
      <edge target="ExplodedBlock[15](original:BB[SSA:14..14]6 - main.&lt;init&gt;()V)"/>
      <ssa instruction="putfield 1.&lt; Application, Lmain, inword, &lt;Primordial,Z&gt; &gt; = 5">
        <use id="1"/>
        <use id="5"/>
      </ssa>
    </bloc>
    <bloc name="ExplodedBlock[15](original:BB[SSA:14..14]6 - main.&lt;init&gt;()V)">
      <edge target="ExplodedBlock[16](exit:&lt; Application, Lmain, &lt;init&gt;()V &gt;)"/>
      <ssa instruction="return"/>
    </bloc>
  </function>
  <function name="&lt; Application, Lmain, wordcount()[I &gt;">
    <parameter id="1"/>
    <constant id="3" value="1"/>
    <constant id="4" value="0"/>
    <constant id="16" value="10"/>
    <constant id="21" value="9"/>
    <constant id="23" value="32"/>
    <constant id="29" value="3"/>
    <constant id="36" value="2"/>
    <bloc name="ExplodedBlock[1](original:BB[SSA:0..2]1 - main.wordcount()[I)">
      <edge target="ExplodedBlock[2](original:BB[SSA:0..2]1 - main.wordcount()[I)"/>
    </bloc>
    <bloc name="ExplodedBlock[2](original:BB[SSA:0..2]1 - main.wordcount()[I)">
      <edge target="ExplodedBlock[3](original:BB[SSA:0..2]1 - main.wordcount()[I)"/>
    </bloc>
    <bloc name="ExplodedBlock[3](original:BB[SSA:0..2]1 - main.wordcount()[I)">
      <edge target="ExplodedBlock[103](exit:&lt; Application, Lmain, wordcount()[I &gt;)"/>
      <edge target="ExplodedBlock[4](original:BB[SSA:3..5]2 - main.wordcount()[I)"/>
      <ssa instruction="putfield 1.&lt; Application, Lmain, nl, &lt;Primordial,I&gt; &gt; = 3">
        <use id="1"/>
        <use id="3"/>
      </ssa>
    </bloc>
    <bloc name="ExplodedBlock[4](original:BB[SSA:3..5]2 - main.wordcount()[I)">
      <edge target="ExplodedBlock[5](original:BB[SSA:3..5]2 - main.wordcount()[I)"/>
    </bloc>
    <bloc name="ExplodedBlock[5](original:BB[SSA:3..5]2 - main.wordcount()[I)">
      <edge target="ExplodedBlock[6](original:BB[SSA:3..5]2 - main.wordcount()[I)"/>
    </bloc>
    <bloc name="ExplodedBlock[6](original:BB[SSA:3..5]2 - main.wordcount()[I)">
      <edge target="ExplodedBlock[103](exit:&lt; Application, Lmain, wordcount()[I &gt;)"/>
      <edge target="ExplodedBlock[7](original:BB[SSA:6..8]3 - main.wordcount()[I)"/>
      <ssa instruction="putfield 1.&lt; Application, Lmain, nw, &lt;Primordial,I&gt; &gt; = 3">
        <use id="1"/>
        <use id="3"/>
      </ssa>
    </bloc>
    <bloc name="ExplodedBlock[7](original:BB[SSA:6..8]3 - main.wordcount()[I)">
      <edge target="ExplodedBlock[8](original:BB[SSA:6..8]3 - main.wordcount()[I)"/>
    </bloc>
    <bloc name="ExplodedBlock[8](original:BB[SSA:6..8]3 - main.wordcount()[I)">
      <edge target="ExplodedBlock[9](original:BB[SSA:6..8]3 - main.wordcount()[I)"/>
    </bloc>
    <bloc name="ExplodedBlock[9](original:BB[SSA:6..8]3 - main.wordcount()[I)">
      <edge target="ExplodedBlock[103](exit:&lt; Application, Lmain, wordcount()[I &gt;)"/>
      <edge target="ExplodedBlock[10](original:BB[SSA:9..11]4 - main.wordcount()[I)"/>
      <ssa instruction="putfield 1.&lt; Application, Lmain, nc, &lt;Primordial,I&gt; &gt; = 3">
        <use id="1"/>
        <use id="3"/>
      </ssa>
    </bloc>
    <bloc name="ExplodedBlock[10](original:BB[SSA:9..11]4 - main.wordcount()[I)">
      <edge target="ExplodedBlock[11](original:BB[SSA:9..11]4 - main.wordcount()[I)"/>
    </bloc>
    <bloc name="ExplodedBlock[11](original:BB[SSA:9..11]4 - main.wordcount()[I)">
      <edge target="ExplodedBlock[12](original:BB[SSA:9..11]4 - main.wordcount()[I)"/>
    </bloc>
    <bloc name="ExplodedBlock[12](original:BB[SSA:9..11]4 - main.wordcount()[I)">
      <edge target="ExplodedBlock[103](exit:&lt; Application, Lmain, wordcount()[I &gt;)"/>
      <edge target="ExplodedBlock[13](original:BB[SSA:12..13]5 - main.wordcount()[I)"/>
      <ssa instruction="putfield 1.&lt; Application, Lmain, indent, &lt;Primordial,I&gt; &gt; = 4">
        <use id="1"/>
        <use id="4"/>
      </ssa>
    </bloc>
    <bloc name="ExplodedBlock[13](original:BB[SSA:12..13]5 - main.wordcount()[I)">
      <edge target="ExplodedBlock[14](original:BB[SSA:12..13]5 - main.wordcount()[I)"/>
    </bloc>
    <bloc name="ExplodedBlock[14](original:BB[SSA:12..13]5 - main.wordcount()[I)">
      <edge target="ExplodedBlock[103](exit:&lt; Application, Lmain, wordcount()[I &gt;)"/>
      <edge target="ExplodedBlock[15](original:BB[SSA:14..15]6 - main.wordcount()[I)"/>
      <ssa instruction="5 = getfield &lt; Application, Lmain, indent, &lt;Primordial,I&gt; &gt; 1">
        <def id="5"/>
        <use id="1"/>
      </ssa>
    </bloc>
    <bloc name="ExplodedBlock[15](original:BB[SSA:14..15]6 - main.wordcount()[I)">
      <edge target="ExplodedBlock[16](original:BB[SSA:14..15]6 - main.wordcount()[I)"/>
    </bloc>
    <bloc name="ExplodedBlock[16](original:BB[SSA:14..15]6 - main.wordcount()[I)">
      <edge target="ExplodedBlock[103](exit:&lt; Application, Lmain, wordcount()[I &gt;)"/>
      <edge target="ExplodedBlock[17](original:BB[SSA:16..16]7 - main.wordcount()[I)"/>
      <ssa instruction="6 = getfield &lt; Application, Lmain, chaine, &lt;Application,Ljava/lang/String&gt; &gt; 1">
        <def id="6"/>
        <use id="1"/>
      </ssa>
    </bloc>
    <bloc name="ExplodedBlock[17](original:BB[SSA:16..16]7 - main.wordcount()[I)">
      <edge target="ExplodedBlock[103](exit:&lt; Application, Lmain, wordcount()[I &gt;)"/>
      <edge target="ExplodedBlock[18](original:BB[SSA:17..17]8 - main.wordcount()[I)"/>
      <ssa instruction="8 = invokevirtual &lt; Application, Ljava/lang/String, length()I &gt; 6 @28 exception:7">
        <def id="8"/>
        <def id="7"/>
        <use id="6">
          <ref instr="6 = getfield &lt; Application, Lmain, chaine, &lt;Application,Ljava/lang/String&gt; &gt; 1"/>
        </use>
      </ssa>
    </bloc>
    <bloc name="ExplodedBlock[18](original:BB[SSA:17..17]8 - main.wordcount()[I)">
      <edge target="ExplodedBlock[19](original:BB[SSA:18..20]9 - main.wordcount()[I)"/>
      <edge target="ExplodedBlock[78](original:BB[SSA:77..79]35 - main.wordcount()[I)"/>
      <ssa instruction="conditional branch(ge, to iindex=77) 5,8">
        <use id="5">
          <ref instr="5 = getfield &lt; Application, Lmain, indent, &lt;Primordial,I&gt; &gt; 1"/>
        </use>
        <use id="8">
          <ref instr="8 = invokevirtual &lt; Application, Ljava/lang/String, length()I &gt; 6 @28 exception:7"/>
        </use>
      </ssa>
    </bloc>
    <bloc name="ExplodedBlock[19](original:BB[SSA:18..20]9 - main.wordcount()[I)">
      <edge target="ExplodedBlock[20](original:BB[SSA:18..20]9 - main.wordcount()[I)"/>
    </bloc>
    <bloc name="ExplodedBlock[20](original:BB[SSA:18..20]9 - main.wordcount()[I)">
      <edge target="ExplodedBlock[21](original:BB[SSA:18..20]9 - main.wordcount()[I)"/>
    </bloc>
    <bloc name="ExplodedBlock[21](original:BB[SSA:18..20]9 - main.wordcount()[I)">
      <edge target="ExplodedBlock[103](exit:&lt; Application, Lmain, wordcount()[I &gt;)"/>
      <edge target="ExplodedBlock[22](original:BB[SSA:21..22]10 - main.wordcount()[I)"/>
      <ssa instruction="9 = getfield &lt; Application, Lmain, chaine, &lt;Application,Ljava/lang/String&gt; &gt; 1">
        <def id="9"/>
        <use id="1"/>
      </ssa>
    </bloc>
    <bloc name="ExplodedBlock[22](original:BB[SSA:21..22]10 - main.wordcount()[I)">
      <edge target="ExplodedBlock[23](original:BB[SSA:21..22]10 - main.wordcount()[I)"/>
    </bloc>
    <bloc name="ExplodedBlock[23](original:BB[SSA:21..22]10 - main.wordcount()[I)">
      <edge target="ExplodedBlock[103](exit:&lt; Application, Lmain, wordcount()[I &gt;)"/>
      <edge target="ExplodedBlock[24](original:BB[SSA:23..23]11 - main.wordcount()[I)"/>
      <ssa instruction="10 = getfield &lt; Application, Lmain, indent, &lt;Primordial,I&gt; &gt; 1">
        <def id="10"/>
        <use id="1"/>
      </ssa>
    </bloc>
    <bloc name="ExplodedBlock[24](original:BB[SSA:23..23]11 - main.wordcount()[I)">
      <edge target="ExplodedBlock[103](exit:&lt; Application, Lmain, wordcount()[I &gt;)"/>
      <edge target="ExplodedBlock[25](original:BB[SSA:24..24]12 - main.wordcount()[I)"/>
      <ssa instruction="12 = invokevirtual &lt; Application, Ljava/lang/String, charAt(I)C &gt; 9,10 @43 exception:11">
        <def id="12"/>
        <def id="11"/>
        <use id="9">
          <ref instr="9 = getfield &lt; Application, Lmain, chaine, &lt;Application,Ljava/lang/String&gt; &gt; 1"/>
        </use>
        <use id="10">
          <ref instr="10 = getfield &lt; Application, Lmain, indent, &lt;Primordial,I&gt; &gt; 1"/>
        </use>
      </ssa>
    </bloc>
    <bloc name="ExplodedBlock[25](original:BB[SSA:24..24]12 - main.wordcount()[I)">
      <edge target="ExplodedBlock[103](exit:&lt; Application, Lmain, wordcount()[I &gt;)"/>
      <edge target="ExplodedBlock[26](original:BB[SSA:25..27]13 - main.wordcount()[I)"/>
      <ssa instruction="putfield 1.&lt; Application, Lmain, c, &lt;Primordial,C&gt; &gt; = 12">
        <use id="1"/>
        <use id="12">
          <ref instr="12 = invokevirtual &lt; Application, Ljava/lang/String, charAt(I)C &gt; 9,10 @43 exception:11"/>
        </use>
      </ssa>
    </bloc>
    <bloc name="ExplodedBlock[26](original:BB[SSA:25..27]13 - main.wordcount()[I)">
      <edge target="ExplodedBlock[27](original:BB[SSA:25..27]13 - main.wordcount()[I)"/>
    </bloc>
    <bloc name="ExplodedBlock[27](original:BB[SSA:25..27]13 - main.wordcount()[I)">
      <edge target="ExplodedBlock[28](original:BB[SSA:25..27]13 - main.wordcount()[I)"/>
    </bloc>
    <bloc name="ExplodedBlock[28](original:BB[SSA:25..27]13 - main.wordcount()[I)">
      <edge target="ExplodedBlock[103](exit:&lt; Application, Lmain, wordcount()[I &gt;)"/>
      <edge target="ExplodedBlock[29](original:BB[SSA:28..30]14 - main.wordcount()[I)"/>
      <ssa instruction="13 = getfield &lt; Application, Lmain, nc, &lt;Primordial,I&gt; &gt; 1">
        <def id="13"/>
        <use id="1"/>
      </ssa>
    </bloc>
    <bloc name="ExplodedBlock[29](original:BB[SSA:28..30]14 - main.wordcount()[I)">
      <edge target="ExplodedBlock[30](original:BB[SSA:28..30]14 - main.wordcount()[I)"/>
    </bloc>
    <bloc name="ExplodedBlock[30](original:BB[SSA:28..30]14 - main.wordcount()[I)">
      <edge target="ExplodedBlock[31](original:BB[SSA:28..30]14 - main.wordcount()[I)"/>
      <ssa instruction="14 = binaryop(add) 13 , 3">
        <def id="14"/>
        <use id="13">
          <ref instr="13 = getfield &lt; Application, Lmain, nc, &lt;Primordial,I&gt; &gt; 1"/>
        </use>
        <use id="3"/>
      </ssa>
    </bloc>
    <bloc name="ExplodedBlock[31](original:BB[SSA:28..30]14 - main.wordcount()[I)">
      <edge target="ExplodedBlock[103](exit:&lt; Application, Lmain, wordcount()[I &gt;)"/>
      <edge target="ExplodedBlock[32](original:BB[SSA:31..32]15 - main.wordcount()[I)"/>
      <ssa instruction="putfield 1.&lt; Application, Lmain, nc, &lt;Primordial,I&gt; &gt; = 14">
        <use id="1"/>
        <use id="14">
          <ref instr="14 = binaryop(add) 13 , 3"/>
        </use>
      </ssa>
    </bloc>
    <bloc name="ExplodedBlock[32](original:BB[SSA:31..32]15 - main.wordcount()[I)">
      <edge target="ExplodedBlock[33](original:BB[SSA:31..32]15 - main.wordcount()[I)"/>
    </bloc>
    <bloc name="ExplodedBlock[33](original:BB[SSA:31..32]15 - main.wordcount()[I)">
      <edge target="ExplodedBlock[103](exit:&lt; Application, Lmain, wordcount()[I &gt;)"/>
      <edge target="ExplodedBlock[34](original:BB[SSA:33..34]16 - main.wordcount()[I)"/>
      <ssa instruction="15 = getfield &lt; Application, Lmain, c, &lt;Primordial,C&gt; &gt; 1">
        <def id="15"/>
        <use id="1"/>
      </ssa>
    </bloc>
    <bloc name="ExplodedBlock[34](original:BB[SSA:33..34]16 - main.wordcount()[I)">
      <edge target="ExplodedBlock[35](original:BB[SSA:33..34]16 - main.wordcount()[I)"/>
    </bloc>
    <bloc name="ExplodedBlock[35](original:BB[SSA:33..34]16 - main.wordcount()[I)">
      <edge target="ExplodedBlock[36](original:BB[SSA:35..37]17 - main.wordcount()[I)"/>
      <edge target="ExplodedBlock[42](original:BB[SSA:41..42]19 - main.wordcount()[I)"/>
      <ssa instruction="conditional branch(ne, to iindex=41) 15,16">
        <use id="15">
          <ref instr="15 = getfield &lt; Application, Lmain, c, &lt;Primordial,C&gt; &gt; 1"/>
        </use>
        <use id="16"/>
      </ssa>
    </bloc>
    <bloc name="ExplodedBlock[36](original:BB[SSA:35..37]17 - main.wordcount()[I)">
      <edge target="ExplodedBlock[37](original:BB[SSA:35..37]17 - main.wordcount()[I)"/>
    </bloc>
    <bloc name="ExplodedBlock[37](original:BB[SSA:35..37]17 - main.wordcount()[I)">
      <edge target="ExplodedBlock[38](original:BB[SSA:35..37]17 - main.wordcount()[I)"/>
    </bloc>
    <bloc name="ExplodedBlock[38](original:BB[SSA:35..37]17 - main.wordcount()[I)">
      <edge target="ExplodedBlock[103](exit:&lt; Application, Lmain, wordcount()[I &gt;)"/>
      <edge target="ExplodedBlock[39](original:BB[SSA:38..40]18 - main.wordcount()[I)"/>
      <ssa instruction="17 = getfield &lt; Application, Lmain, nl, &lt;Primordial,I&gt; &gt; 1">
        <def id="17"/>
        <use id="1"/>
      </ssa>
    </bloc>
    <bloc name="ExplodedBlock[39](original:BB[SSA:38..40]18 - main.wordcount()[I)">
      <edge target="ExplodedBlock[40](original:BB[SSA:38..40]18 - main.wordcount()[I)"/>
    </bloc>
    <bloc name="ExplodedBlock[40](original:BB[SSA:38..40]18 - main.wordcount()[I)">
      <edge target="ExplodedBlock[41](original:BB[SSA:38..40]18 - main.wordcount()[I)"/>
      <ssa instruction="18 = binaryop(add) 17 , 3">
        <def id="18"/>
        <use id="17">
          <ref instr="17 = getfield &lt; Application, Lmain, nl, &lt;Primordial,I&gt; &gt; 1"/>
        </use>
        <use id="3"/>
      </ssa>
    </bloc>
    <bloc name="ExplodedBlock[41](original:BB[SSA:38..40]18 - main.wordcount()[I)">
      <edge target="ExplodedBlock[103](exit:&lt; Application, Lmain, wordcount()[I &gt;)"/>
      <edge target="ExplodedBlock[42](original:BB[SSA:41..42]19 - main.wordcount()[I)"/>
      <ssa instruction="putfield 1.&lt; Application, Lmain, nl, &lt;Primordial,I&gt; &gt; = 18">
        <use id="1"/>
        <use id="18">
          <ref instr="18 = binaryop(add) 17 , 3"/>
        </use>
      </ssa>
    </bloc>
    <bloc name="ExplodedBlock[42](original:BB[SSA:41..42]19 - main.wordcount()[I)">
      <edge target="ExplodedBlock[43](original:BB[SSA:41..42]19 - main.wordcount()[I)"/>
    </bloc>
    <bloc name="ExplodedBlock[43](original:BB[SSA:41..42]19 - main.wordcount()[I)">
      <edge target="ExplodedBlock[103](exit:&lt; Application, Lmain, wordcount()[I &gt;)"/>
      <edge target="ExplodedBlock[44](original:BB[SSA:43..44]20 - main.wordcount()[I)"/>
      <ssa instruction="19 = getfield &lt; Application, Lmain, c, &lt;Primordial,C&gt; &gt; 1">
        <def id="19"/>
        <use id="1"/>
      </ssa>
    </bloc>
    <bloc name="ExplodedBlock[44](original:BB[SSA:43..44]20 - main.wordcount()[I)">
      <edge target="ExplodedBlock[45](original:BB[SSA:43..44]20 - main.wordcount()[I)"/>
    </bloc>
    <bloc name="ExplodedBlock[45](original:BB[SSA:43..44]20 - main.wordcount()[I)">
      <edge target="ExplodedBlock[46](original:BB[SSA:45..46]21 - main.wordcount()[I)"/>
      <edge target="ExplodedBlock[54](original:BB[SSA:53..54]25 - main.wordcount()[I)"/>
      <ssa instruction="conditional branch(eq, to iindex=53) 19,16">
        <use id="19">
          <ref instr="19 = getfield &lt; Application, Lmain, c, &lt;Primordial,C&gt; &gt; 1"/>
        </use>
        <use id="16"/>
      </ssa>
    </bloc>
    <bloc name="ExplodedBlock[46](original:BB[SSA:45..46]21 - main.wordcount()[I)">
      <edge target="ExplodedBlock[47](original:BB[SSA:45..46]21 - main.wordcount()[I)"/>
    </bloc>
    <bloc name="ExplodedBlock[47](original:BB[SSA:45..46]21 - main.wordcount()[I)">
      <edge target="ExplodedBlock[103](exit:&lt; Application, Lmain, wordcount()[I &gt;)"/>
      <edge target="ExplodedBlock[48](original:BB[SSA:47..48]22 - main.wordcount()[I)"/>
      <ssa instruction="20 = getfield &lt; Application, Lmain, c, &lt;Primordial,C&gt; &gt; 1">
        <def id="20"/>
        <use id="1"/>
      </ssa>
    </bloc>
    <bloc name="ExplodedBlock[48](original:BB[SSA:47..48]22 - main.wordcount()[I)">
      <edge target="ExplodedBlock[49](original:BB[SSA:47..48]22 - main.wordcount()[I)"/>
    </bloc>
    <bloc name="ExplodedBlock[49](original:BB[SSA:47..48]22 - main.wordcount()[I)">
      <edge target="ExplodedBlock[50](original:BB[SSA:49..50]23 - main.wordcount()[I)"/>
      <edge target="ExplodedBlock[54](original:BB[SSA:53..54]25 - main.wordcount()[I)"/>
      <ssa instruction="conditional branch(eq, to iindex=53) 20,21">
        <use id="20">
          <ref instr="20 = getfield &lt; Application, Lmain, c, &lt;Primordial,C&gt; &gt; 1"/>
        </use>
        <use id="21"/>
      </ssa>
    </bloc>
    <bloc name="ExplodedBlock[50](original:BB[SSA:49..50]23 - main.wordcount()[I)">
      <edge target="ExplodedBlock[51](original:BB[SSA:49..50]23 - main.wordcount()[I)"/>
    </bloc>
    <bloc name="ExplodedBlock[51](original:BB[SSA:49..50]23 - main.wordcount()[I)">
      <edge target="ExplodedBlock[103](exit:&lt; Application, Lmain, wordcount()[I &gt;)"/>
      <edge target="ExplodedBlock[52](original:BB[SSA:51..52]24 - main.wordcount()[I)"/>
      <ssa instruction="22 = getfield &lt; Application, Lmain, c, &lt;Primordial,C&gt; &gt; 1">
        <def id="22"/>
        <use id="1"/>
      </ssa>
    </bloc>
    <bloc name="ExplodedBlock[52](original:BB[SSA:51..52]24 - main.wordcount()[I)">
      <edge target="ExplodedBlock[53](original:BB[SSA:51..52]24 - main.wordcount()[I)"/>
    </bloc>
    <bloc name="ExplodedBlock[53](original:BB[SSA:51..52]24 - main.wordcount()[I)">
      <edge target="ExplodedBlock[54](original:BB[SSA:53..54]25 - main.wordcount()[I)"/>
      <edge target="ExplodedBlock[68](original:BB[SSA:67..69]31 - main.wordcount()[I)"/>
      <ssa instruction="conditional branch(ne, to iindex=67) 22,23">
        <use id="22">
          <ref instr="22 = getfield &lt; Application, Lmain, c, &lt;Primordial,C&gt; &gt; 1"/>
        </use>
        <use id="23"/>
      </ssa>
    </bloc>
    <bloc name="ExplodedBlock[54](original:BB[SSA:53..54]25 - main.wordcount()[I)">
      <edge target="ExplodedBlock[55](original:BB[SSA:53..54]25 - main.wordcount()[I)"/>
    </bloc>
    <bloc name="ExplodedBlock[55](original:BB[SSA:53..54]25 - main.wordcount()[I)">
      <edge target="ExplodedBlock[103](exit:&lt; Application, Lmain, wordcount()[I &gt;)"/>
      <edge target="ExplodedBlock[56](original:BB[SSA:55..56]26 - main.wordcount()[I)"/>
      <ssa instruction="24 = getfield &lt; Application, Lmain, inword, &lt;Primordial,Z&gt; &gt; 1">
        <def id="24"/>
        <use id="1"/>
      </ssa>
    </bloc>
    <bloc name="ExplodedBlock[56](original:BB[SSA:55..56]26 - main.wordcount()[I)">
      <edge target="ExplodedBlock[57](original:BB[SSA:55..56]26 - main.wordcount()[I)"/>
    </bloc>
    <bloc name="ExplodedBlock[57](original:BB[SSA:55..56]26 - main.wordcount()[I)">
      <edge target="ExplodedBlock[58](original:BB[SSA:57..59]27 - main.wordcount()[I)"/>
      <edge target="ExplodedBlock[71](original:BB[SSA:70..72]32 - main.wordcount()[I)"/>
      <ssa instruction="conditional branch(ne, to iindex=70) 24,4">
        <use id="24">
          <ref instr="24 = getfield &lt; Application, Lmain, inword, &lt;Primordial,Z&gt; &gt; 1"/>
        </use>
        <use id="4"/>
      </ssa>
    </bloc>
    <bloc name="ExplodedBlock[58](original:BB[SSA:57..59]27 - main.wordcount()[I)">
      <edge target="ExplodedBlock[59](original:BB[SSA:57..59]27 - main.wordcount()[I)"/>
    </bloc>
    <bloc name="ExplodedBlock[59](original:BB[SSA:57..59]27 - main.wordcount()[I)">
      <edge target="ExplodedBlock[60](original:BB[SSA:57..59]27 - main.wordcount()[I)"/>
    </bloc>
    <bloc name="ExplodedBlock[60](original:BB[SSA:57..59]27 - main.wordcount()[I)">
      <edge target="ExplodedBlock[103](exit:&lt; Application, Lmain, wordcount()[I &gt;)"/>
      <edge target="ExplodedBlock[61](original:BB[SSA:60..62]28 - main.wordcount()[I)"/>
      <ssa instruction="putfield 1.&lt; Application, Lmain, inword, &lt;Primordial,Z&gt; &gt; = 3">
        <use id="1"/>
        <use id="3"/>
      </ssa>
    </bloc>
    <bloc name="ExplodedBlock[61](original:BB[SSA:60..62]28 - main.wordcount()[I)">
      <edge target="ExplodedBlock[62](original:BB[SSA:60..62]28 - main.wordcount()[I)"/>
    </bloc>
    <bloc name="ExplodedBlock[62](original:BB[SSA:60..62]28 - main.wordcount()[I)">
      <edge target="ExplodedBlock[63](original:BB[SSA:60..62]28 - main.wordcount()[I)"/>
    </bloc>
    <bloc name="ExplodedBlock[63](original:BB[SSA:60..62]28 - main.wordcount()[I)">
      <edge target="ExplodedBlock[103](exit:&lt; Application, Lmain, wordcount()[I &gt;)"/>
      <edge target="ExplodedBlock[64](original:BB[SSA:63..65]29 - main.wordcount()[I)"/>
      <ssa instruction="25 = getfield &lt; Application, Lmain, nw, &lt;Primordial,I&gt; &gt; 1">
        <def id="25"/>
        <use id="1"/>
      </ssa>
    </bloc>
    <bloc name="ExplodedBlock[64](original:BB[SSA:63..65]29 - main.wordcount()[I)">
      <edge target="ExplodedBlock[65](original:BB[SSA:63..65]29 - main.wordcount()[I)"/>
    </bloc>
    <bloc name="ExplodedBlock[65](original:BB[SSA:63..65]29 - main.wordcount()[I)">
      <edge target="ExplodedBlock[66](original:BB[SSA:63..65]29 - main.wordcount()[I)"/>
      <ssa instruction="26 = binaryop(add) 25 , 3">
        <def id="26"/>
        <use id="25">
          <ref instr="25 = getfield &lt; Application, Lmain, nw, &lt;Primordial,I&gt; &gt; 1"/>
        </use>
        <use id="3"/>
      </ssa>
    </bloc>
    <bloc name="ExplodedBlock[66](original:BB[SSA:63..65]29 - main.wordcount()[I)">
      <edge target="ExplodedBlock[103](exit:&lt; Application, Lmain, wordcount()[I &gt;)"/>
      <edge target="ExplodedBlock[67](original:BB[SSA:66..66]30 - main.wordcount()[I)"/>
      <ssa instruction="putfield 1.&lt; Application, Lmain, nw, &lt;Primordial,I&gt; &gt; = 26">
        <use id="1"/>
        <use id="26">
          <ref instr="26 = binaryop(add) 25 , 3"/>
        </use>
      </ssa>
    </bloc>
    <bloc name="ExplodedBlock[67](original:BB[SSA:66..66]30 - main.wordcount()[I)">
      <edge target="ExplodedBlock[71](original:BB[SSA:70..72]32 - main.wordcount()[I)"/>
      <ssa instruction="goto (from iindex= 66 to iindex = 70)"/>
    </bloc>
    <bloc name="ExplodedBlock[68](original:BB[SSA:67..69]31 - main.wordcount()[I)">
      <edge target="ExplodedBlock[69](original:BB[SSA:67..69]31 - main.wordcount()[I)"/>
    </bloc>
    <bloc name="ExplodedBlock[69](original:BB[SSA:67..69]31 - main.wordcount()[I)">
      <edge target="ExplodedBlock[70](original:BB[SSA:67..69]31 - main.wordcount()[I)"/>
    </bloc>
    <bloc name="ExplodedBlock[70](original:BB[SSA:67..69]31 - main.wordcount()[I)">
      <edge target="ExplodedBlock[103](exit:&lt; Application, Lmain, wordcount()[I &gt;)"/>
      <edge target="ExplodedBlock[71](original:BB[SSA:70..72]32 - main.wordcount()[I)"/>
      <ssa instruction="putfield 1.&lt; Application, Lmain, inword, &lt;Primordial,Z&gt; &gt; = 4">
        <use id="1"/>
        <use id="4"/>
      </ssa>
    </bloc>
    <bloc name="ExplodedBlock[71](original:BB[SSA:70..72]32 - main.wordcount()[I)">
      <edge target="ExplodedBlock[72](original:BB[SSA:70..72]32 - main.wordcount()[I)"/>
    </bloc>
    <bloc name="ExplodedBlock[72](original:BB[SSA:70..72]32 - main.wordcount()[I)">
      <edge target="ExplodedBlock[73](original:BB[SSA:70..72]32 - main.wordcount()[I)"/>
    </bloc>
    <bloc name="ExplodedBlock[73](original:BB[SSA:70..72]32 - main.wordcount()[I)">
      <edge target="ExplodedBlock[103](exit:&lt; Application, Lmain, wordcount()[I &gt;)"/>
      <edge target="ExplodedBlock[74](original:BB[SSA:73..75]33 - main.wordcount()[I)"/>
      <ssa instruction="27 = getfield &lt; Application, Lmain, indent, &lt;Primordial,I&gt; &gt; 1">
        <def id="27"/>
        <use id="1"/>
      </ssa>
    </bloc>
    <bloc name="ExplodedBlock[74](original:BB[SSA:73..75]33 - main.wordcount()[I)">
      <edge target="ExplodedBlock[75](original:BB[SSA:73..75]33 - main.wordcount()[I)"/>
    </bloc>
    <bloc name="ExplodedBlock[75](original:BB[SSA:73..75]33 - main.wordcount()[I)">
      <edge target="ExplodedBlock[76](original:BB[SSA:73..75]33 - main.wordcount()[I)"/>
      <ssa instruction="28 = binaryop(add) 27 , 3">
        <def id="28"/>
        <use id="27">
          <ref instr="27 = getfield &lt; Application, Lmain, indent, &lt;Primordial,I&gt; &gt; 1"/>
        </use>
        <use id="3"/>
      </ssa>
    </bloc>
    <bloc name="ExplodedBlock[76](original:BB[SSA:73..75]33 - main.wordcount()[I)">
      <edge target="ExplodedBlock[103](exit:&lt; Application, Lmain, wordcount()[I &gt;)"/>
      <edge target="ExplodedBlock[77](original:BB[SSA:76..76]34 - main.wordcount()[I)"/>
      <ssa instruction="putfield 1.&lt; Application, Lmain, indent, &lt;Primordial,I&gt; &gt; = 28">
        <use id="1"/>
        <use id="28">
          <ref instr="28 = binaryop(add) 27 , 3"/>
        </use>
      </ssa>
    </bloc>
    <bloc name="ExplodedBlock[77](original:BB[SSA:76..76]34 - main.wordcount()[I)">
      <edge target="ExplodedBlock[13](original:BB[SSA:12..13]5 - main.wordcount()[I)"/>
      <ssa instruction="goto (from iindex= 76 to iindex = 12)"/>
    </bloc>
    <bloc name="ExplodedBlock[78](original:BB[SSA:77..79]35 - main.wordcount()[I)">
      <edge target="ExplodedBlock[79](original:BB[SSA:77..79]35 - main.wordcount()[I)"/>
    </bloc>
    <bloc name="ExplodedBlock[79](original:BB[SSA:77..79]35 - main.wordcount()[I)">
      <edge target="ExplodedBlock[80](original:BB[SSA:77..79]35 - main.wordcount()[I)"/>
    </bloc>
    <bloc name="ExplodedBlock[80](original:BB[SSA:77..79]35 - main.wordcount()[I)">
      <edge target="ExplodedBlock[103](exit:&lt; Application, Lmain, wordcount()[I &gt;)"/>
      <edge target="ExplodedBlock[81](original:BB[SSA:80..80]36 - main.wordcount()[I)"/>
      <ssa instruction="30 = new &lt;Primordial,[I&gt;@15029 ">
        <def id="30"/>
        <use id="29"/>
      </ssa>
    </bloc>
    <bloc name="ExplodedBlock[81](original:BB[SSA:80..80]36 - main.wordcount()[I)">
      <edge target="ExplodedBlock[103](exit:&lt; Application, Lmain, wordcount()[I &gt;)"/>
      <edge target="ExplodedBlock[82](original:BB[SSA:81..82]37 - main.wordcount()[I)"/>
      <ssa instruction="putfield 1.&lt; Application, Lmain, s, &lt;Primordial,[I&gt; &gt; = 30">
        <use id="1"/>
        <use id="30">
          <ref instr="30 = new &lt;Primordial,[I&gt;@15029 "/>
        </use>
      </ssa>
    </bloc>
    <bloc name="ExplodedBlock[82](original:BB[SSA:81..82]37 - main.wordcount()[I)">
      <edge target="ExplodedBlock[83](original:BB[SSA:81..82]37 - main.wordcount()[I)"/>
    </bloc>
    <bloc name="ExplodedBlock[83](original:BB[SSA:81..82]37 - main.wordcount()[I)">
      <edge target="ExplodedBlock[103](exit:&lt; Application, Lmain, wordcount()[I &gt;)"/>
      <edge target="ExplodedBlock[84](original:BB[SSA:83..85]38 - main.wordcount()[I)"/>
      <ssa instruction="31 = getfield &lt; Application, Lmain, s, &lt;Primordial,[I&gt; &gt; 1">
        <def id="31"/>
        <use id="1"/>
      </ssa>
    </bloc>
    <bloc name="ExplodedBlock[84](original:BB[SSA:83..85]38 - main.wordcount()[I)">
      <edge target="ExplodedBlock[85](original:BB[SSA:83..85]38 - main.wordcount()[I)"/>
    </bloc>
    <bloc name="ExplodedBlock[85](original:BB[SSA:83..85]38 - main.wordcount()[I)">
      <edge target="ExplodedBlock[86](original:BB[SSA:83..85]38 - main.wordcount()[I)"/>
    </bloc>
    <bloc name="ExplodedBlock[86](original:BB[SSA:83..85]38 - main.wordcount()[I)">
      <edge target="ExplodedBlock[103](exit:&lt; Application, Lmain, wordcount()[I &gt;)"/>
      <edge target="ExplodedBlock[87](original:BB[SSA:86..86]39 - main.wordcount()[I)"/>
      <ssa instruction="32 = getfield &lt; Application, Lmain, nl, &lt;Primordial,I&gt; &gt; 1">
        <def id="32"/>
        <use id="1"/>
      </ssa>
    </bloc>
    <bloc name="ExplodedBlock[87](original:BB[SSA:86..86]39 - main.wordcount()[I)">
      <edge target="ExplodedBlock[103](exit:&lt; Application, Lmain, wordcount()[I &gt;)"/>
      <edge target="ExplodedBlock[88](original:BB[SSA:87..88]40 - main.wordcount()[I)"/>
      <ssa instruction="arraystore 31[4] = 32">
        <use id="31">
          <ref instr="31 = getfield &lt; Application, Lmain, s, &lt;Primordial,[I&gt; &gt; 1"/>
        </use>
        <use id="4"/>
        <use id="32">
          <ref instr="32 = getfield &lt; Application, Lmain, nl, &lt;Primordial,I&gt; &gt; 1"/>
        </use>
      </ssa>
    </bloc>
    <bloc name="ExplodedBlock[88](original:BB[SSA:87..88]40 - main.wordcount()[I)">
      <edge target="ExplodedBlock[89](original:BB[SSA:87..88]40 - main.wordcount()[I)"/>
    </bloc>
    <bloc name="ExplodedBlock[89](original:BB[SSA:87..88]40 - main.wordcount()[I)">
      <edge target="ExplodedBlock[103](exit:&lt; Application, Lmain, wordcount()[I &gt;)"/>
      <edge target="ExplodedBlock[90](original:BB[SSA:89..91]41 - main.wordcount()[I)"/>
      <ssa instruction="33 = getfield &lt; Application, Lmain, s, &lt;Primordial,[I&gt; &gt; 1">
        <def id="33"/>
        <use id="1"/>
      </ssa>
    </bloc>
    <bloc name="ExplodedBlock[90](original:BB[SSA:89..91]41 - main.wordcount()[I)">
      <edge target="ExplodedBlock[91](original:BB[SSA:89..91]41 - main.wordcount()[I)"/>
    </bloc>
    <bloc name="ExplodedBlock[91](original:BB[SSA:89..91]41 - main.wordcount()[I)">
      <edge target="ExplodedBlock[92](original:BB[SSA:89..91]41 - main.wordcount()[I)"/>
    </bloc>
    <bloc name="ExplodedBlock[92](original:BB[SSA:89..91]41 - main.wordcount()[I)">
      <edge target="ExplodedBlock[103](exit:&lt; Application, Lmain, wordcount()[I &gt;)"/>
      <edge target="ExplodedBlock[93](original:BB[SSA:92..92]42 - main.wordcount()[I)"/>
      <ssa instruction="34 = getfield &lt; Application, Lmain, nw, &lt;Primordial,I&gt; &gt; 1">
        <def id="34"/>
        <use id="1"/>
      </ssa>
    </bloc>
    <bloc name="ExplodedBlock[93](original:BB[SSA:92..92]42 - main.wordcount()[I)">
      <edge target="ExplodedBlock[103](exit:&lt; Application, Lmain, wordcount()[I &gt;)"/>
      <edge target="ExplodedBlock[94](original:BB[SSA:93..94]43 - main.wordcount()[I)"/>
      <ssa instruction="arraystore 33[3] = 34">
        <use id="33">
          <ref instr="33 = getfield &lt; Application, Lmain, s, &lt;Primordial,[I&gt; &gt; 1"/>
        </use>
        <use id="3"/>
        <use id="34">
          <ref instr="34 = getfield &lt; Application, Lmain, nw, &lt;Primordial,I&gt; &gt; 1"/>
        </use>
      </ssa>
    </bloc>
    <bloc name="ExplodedBlock[94](original:BB[SSA:93..94]43 - main.wordcount()[I)">
      <edge target="ExplodedBlock[95](original:BB[SSA:93..94]43 - main.wordcount()[I)"/>
    </bloc>
    <bloc name="ExplodedBlock[95](original:BB[SSA:93..94]43 - main.wordcount()[I)">
      <edge target="ExplodedBlock[103](exit:&lt; Application, Lmain, wordcount()[I &gt;)"/>
      <edge target="ExplodedBlock[96](original:BB[SSA:95..97]44 - main.wordcount()[I)"/>
      <ssa instruction="35 = getfield &lt; Application, Lmain, s, &lt;Primordial,[I&gt; &gt; 1">
        <def id="35"/>
        <use id="1"/>
      </ssa>
    </bloc>
    <bloc name="ExplodedBlock[96](original:BB[SSA:95..97]44 - main.wordcount()[I)">
      <edge target="ExplodedBlock[97](original:BB[SSA:95..97]44 - main.wordcount()[I)"/>
    </bloc>
    <bloc name="ExplodedBlock[97](original:BB[SSA:95..97]44 - main.wordcount()[I)">
      <edge target="ExplodedBlock[98](original:BB[SSA:95..97]44 - main.wordcount()[I)"/>
    </bloc>
    <bloc name="ExplodedBlock[98](original:BB[SSA:95..97]44 - main.wordcount()[I)">
      <edge target="ExplodedBlock[103](exit:&lt; Application, Lmain, wordcount()[I &gt;)"/>
      <edge target="ExplodedBlock[99](original:BB[SSA:98..98]45 - main.wordcount()[I)"/>
      <ssa instruction="37 = getfield &lt; Application, Lmain, nc, &lt;Primordial,I&gt; &gt; 1">
        <def id="37"/>
        <use id="1"/>
      </ssa>
    </bloc>
    <bloc name="ExplodedBlock[99](original:BB[SSA:98..98]45 - main.wordcount()[I)">
      <edge target="ExplodedBlock[103](exit:&lt; Application, Lmain, wordcount()[I &gt;)"/>
      <edge target="ExplodedBlock[100](original:BB[SSA:99..100]46 - main.wordcount()[I)"/>
      <ssa instruction="arraystore 35[36] = 37">
        <use id="35">
          <ref instr="35 = getfield &lt; Application, Lmain, s, &lt;Primordial,[I&gt; &gt; 1"/>
        </use>
        <use id="36"/>
        <use id="37">
          <ref instr="37 = getfield &lt; Application, Lmain, nc, &lt;Primordial,I&gt; &gt; 1"/>
        </use>
      </ssa>
    </bloc>
    <bloc name="ExplodedBlock[100](original:BB[SSA:99..100]46 - main.wordcount()[I)">
      <edge target="ExplodedBlock[101](original:BB[SSA:99..100]46 - main.wordcount()[I)"/>
    </bloc>
    <bloc name="ExplodedBlock[101](original:BB[SSA:99..100]46 - main.wordcount()[I)">
      <edge target="ExplodedBlock[103](exit:&lt; Application, Lmain, wordcount()[I &gt;)"/>
      <edge target="ExplodedBlock[102](original:BB[SSA:101..101]47 - main.wordcount()[I)"/>
      <ssa instruction="38 = getfield &lt; Application, Lmain, s, &lt;Primordial,[I&gt; &gt; 1">
        <def id="38"/>
        <use id="1"/>
      </ssa>
    </bloc>
    <bloc name="ExplodedBlock[102](original:BB[SSA:101..101]47 - main.wordcount()[I)">
      <edge target="ExplodedBlock[103](exit:&lt; Application, Lmain, wordcount()[I &gt;)"/>
      <ssa instruction="return 38">
        <use id="38">
          <ref instr="38 = getfield &lt; Application, Lmain, s, &lt;Primordial,[I&gt; &gt; 1"/>
        </use>
      </ssa>
    </bloc>
  </function>
</project>
